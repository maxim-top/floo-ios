/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.9
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef FLOO_WRAP_H
#define FLOO_WRAP_H

#ifdef __cplusplus
extern "C" {
#endif

#define Void2BMXImageAttachment(ptr, res) long long lPtr = (long long)(ptr);\
  floo::BMXImageAttachmentPtr res ;\
  floo::BMXImageAttachmentPtr *pRes = *(floo::BMXImageAttachmentPtr **)&lPtr;\
  if (pRes) res = *pRes;

#define BMXSDKConfig2Void(ptr) long long lresult = 0L;\
  *(floo::BMXSDKConfigPtr **)&lresult = ptr ? new floo::BMXSDKConfigPtr( ptr ) : 0;

#define BMXUserProfile2Void(ptr) long long lresult = 0L;\
  *(floo::BMXUserProfilePtr **)&lresult = ptr ? new floo::BMXUserProfilePtr( ptr ) : 0;

#define BMXRosterList2Void(ptr) long long lresult = 0L;\
*(floo::BMXRosterList **)&lresult = new floo::BMXRosterList( ptr );

#define BMXMessageConfig2Void(ptr) long long lresult = 0L;\
  *(floo::BMXMessageConfigPtr **)&lresult = ptr ? new floo::BMXMessageConfigPtr( ptr ) : 0;

#define BMXMessageAttachment2Void(ptr) long long lresult = 0L;\
  *(floo::BMXMessageAttachmentPtr **)&lresult = ptr ? new floo::BMXMessageAttachmentPtr( ptr ) : 0;

#define BMXFileAttachment2Void(ptr) long long lresult = 0L;\
  *(floo::BMXFileAttachmentPtr **)&lresult = ptr ? new floo::BMXFileAttachmentPtr( ptr ) : 0;

#define BMXVideoAttachment2Void(ptr) long long lresult = 0L;\
  *(floo::BMXVideoAttachmentPtr **)&lresult = ptr ? new floo::BMXVideoAttachmentPtr( ptr ) : 0;

#define BMXVoiceAttachment2Void(ptr) long long lresult = 0L;\
  *(floo::BMXVoiceAttachmentPtr **)&lresult = ptr ? new floo::BMXVoiceAttachmentPtr( ptr ) : 0;

#define BMXLocationAttachment2Void(ptr) long long lresult = 0L;\
  *(floo::BMXLocationAttachmentPtr **)&lresult = ptr ? new floo::BMXLocationAttachmentPtr( ptr ) : 0;

#define BMXMessage2Void(ptr) long long lresult = 0L;\
  *(floo::BMXMessagePtr **)&lresult = ptr ? new floo::BMXMessagePtr( ptr ) : 0;

#define BMXConversation2Void(ptr) long long lresult = 0L;\
  *(floo::BMXConversationPtr **)&lresult = ptr ? new floo::BMXConversationPtr( ptr ) : 0;

#define BMXClient2Void(ptr) long long lresult = 0L;\
  *(floo::BMXClientPtr **)&lresult = ptr ? new floo::BMXClientPtr( ptr ) : 0;

#define BMXRosterItem2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRosterItemPtr **)&lresult = ptr ? new floo::BMXRosterItemPtr( ptr ) : 0;

#define BMXConversationList2Void(ptr) long long lresult = 0L;\
  *(floo::BMXConversationList **)&lresult = new floo::BMXConversationList( ptr );

#define BMXGroup2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroupPtr **)&lresult = ptr ? new floo::BMXGroupPtr( ptr ) : 0;

#define BMXDevice2Void(ptr) long long lresult = 0L;\
  *(floo::BMXDevicePtr **)&lresult = ptr ? new floo::BMXDevicePtr( ptr ) : 0;

#define BMXGroupMember2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::MemberPtr **)&lresult = ptr ? new floo::BMXGroup::MemberPtr( ptr ) : 0;

#define BMXGroupBannedMember2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::BannedMemberPtr **)&lresult = ptr ? new floo::BMXGroup::BannedMemberPtr( ptr ) : 0;

#define BMXGroupSharedFile2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::SharedFilePtr **)&lresult = ptr ? new floo::BMXGroup::SharedFilePtr( ptr ) : 0;

#define BMXGroupAnnouncement2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::AnnouncementPtr **)&lresult = ptr ? new floo::BMXGroup::AnnouncementPtr( ptr ) : 0;

#define BMXGroupInvitation2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::InvitationPtr **)&lresult = ptr ? new floo::BMXGroup::InvitationPtr( ptr ) : 0;

#define BMXGroupApplication2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroup::ApplicationPtr **)&lresult = ptr ? new floo::BMXGroup::ApplicationPtr( ptr ) : 0;

#define BMXRosterServiceApplication2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRosterService::ApplicationPtr **)&lresult = new floo::BMXRosterService::ApplicationPtr( ptr );

#define BMXRosterServiceApplicationList2Void(ptr) long long lresult = 0L;\
  *(std::vector< std::shared_ptr< floo::BMXRosterService::Application > > **)&lresult = new std::vector< std::shared_ptr< floo::BMXRosterService::Application > >( ptr );

#define BMXRosterApplicationResultPage2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRosterService::BMXRosterApplicationResultPagePtr **)&lresult = new floo::BMXRosterService::BMXRosterApplicationResultPagePtr( ptr );

#define BMXRTCSession2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCSessionPtr **)&lresult = ptr ? new floo::BMXRTCSessionPtr( ptr ) : 0;

#define BMXRTCRoom2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCRoomPtr **)&lresult = ptr ? new floo::BMXRTCRoomPtr( ptr ) : 0;

#define BMXRoomParticipant2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRoomParticipantPtr **)&lresult = ptr ? new floo::BMXRoomParticipantPtr( ptr ) : 0;

#define BMXJanusPublisher2Void(ptr) long long lresult = 0L;\
  *(floo::BMXJanusPublisherPtr **)&lresult = ptr ? new floo::BMXJanusPublisherPtr( ptr ) : 0;

#define BMXRoomSDPInfo2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRoomSDPInfoPtr **)&lresult = ptr ? new floo::BMXRoomSDPInfoPtr( ptr ) : 0;

#define BMXStream2Void(ptr) long long lresult = 0L;\
  *(floo::BMXStreamPtr **)&lresult = ptr ? new floo::BMXStreamPtr( ptr ) : 0;

#define BMXVideoCanvas2Void(ptr) long long lresult = 0L;\
  *(floo::BMXVideoCanvasPtr **)&lresult = ptr ? new floo::BMXVideoCanvasPtr( ptr ) : 0;

#define BMXJanusStreamInfo2Void(ptr) long long lresult = 0L;\
  *(floo::BMXJanusStreamInfoPtr **)&lresult = ptr ? new floo::BMXJanusStreamInfoPtr( ptr ) : 0;

#define BMXPubRoomJoinOptions2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCSignalService::BMXPubRoomJoinOptionsPtr **)&lresult = ptr ? new floo::BMXRTCSignalService::BMXPubRoomJoinOptionsPtr( ptr ) : 0;

#define BMXRoomSubJoinOptions2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCSignalService::BMXRoomSubJoinOptionsPtr **)&lresult = ptr ? new floo::BMXRTCSignalService::BMXRoomSubJoinOptionsPtr( ptr ) : 0;

#define BMXRoomCreateOptions2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCSignalService::BMXRoomCreateOptionsPtr **)&lresult = ptr ? new floo::BMXRTCSignalService::BMXRoomCreateOptionsPtr( ptr ) : 0;

#define BMXRoomPubConfigureOptions2Void(ptr) long long lresult = 0L;\
  *(floo::BMXRTCSignalService::BMXRoomPubConfigureOptionsPtr **)&lresult = ptr ? new floo::BMXRTCSignalService::BMXRoomPubConfigureOptionsPtr( ptr ) : 0;

#define BMXGroupServiceCreateGroupOptions2Void(ptr) long long lresult = 0L;\
  *(floo::BMXGroupService::CreateGroupOptionsPtr **)&lresult = ptr ? new floo::BMXGroupService::CreateGroupOptionsPtr( ptr ) : 0;

void* _wrap_new_BMXMessageList__SWIG_0();
void* _wrap_new_BMXMessageList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXMessageList_size(void* imarg1);
unsigned long _wrap_BMXMessageList_capacity(void* imarg1);
void _wrap_BMXMessageList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXMessageList_isEmpty(void* imarg1);
void _wrap_BMXMessageList_clear(void* imarg1);
void _wrap_BMXMessageList_add(void* imarg1, void* imarg2);
void* _wrap_BMXMessageList_get(void* imarg1, int imarg2);
void _wrap_BMXMessageList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXMessageList(void* imarg1);
void* _wrap_new_TagList__SWIG_0();
void* _wrap_new_TagList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_TagList_size(void* imarg1);
unsigned long _wrap_TagList_capacity(void* imarg1);
void _wrap_TagList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_TagList_isEmpty(void* imarg1);
void _wrap_TagList_clear(void* imarg1);
void _wrap_TagList_add(void* imarg1, NSString* imarg2);
NSString* _wrap_TagList_get(void* imarg1, int imarg2);
void _wrap_TagList_set(void* imarg1, int imarg2, NSString* imarg3);
void _wrap_delete_TagList(void* imarg1);
void* _wrap_new_BMXConversationList__SWIG_0();
void* _wrap_new_BMXConversationList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXConversationList_size(void* imarg1);
unsigned long _wrap_BMXConversationList_capacity(void* imarg1);
void _wrap_BMXConversationList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXConversationList_isEmpty(void* imarg1);
void _wrap_BMXConversationList_clear(void* imarg1);
void _wrap_BMXConversationList_add(void* imarg1, void* imarg2);
void* _wrap_BMXConversationList_get(void* imarg1, int imarg2);
void _wrap_BMXConversationList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXConversationList(void* imarg1);
void* _wrap_new_BMXDeviceList__SWIG_0();
void* _wrap_new_BMXDeviceList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXDeviceList_size(void* imarg1);
unsigned long _wrap_BMXDeviceList_capacity(void* imarg1);
void _wrap_BMXDeviceList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXDeviceList_isEmpty(void* imarg1);
void _wrap_BMXDeviceList_clear(void* imarg1);
void _wrap_BMXDeviceList_add(void* imarg1, void* imarg2);
void* _wrap_BMXDeviceList_get(void* imarg1, int imarg2);
void _wrap_BMXDeviceList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXDeviceList(void* imarg1);
void* _wrap_new_BMXGroupList__SWIG_0();
void* _wrap_new_BMXGroupList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupList_size(void* imarg1);
unsigned long _wrap_BMXGroupList_capacity(void* imarg1);
void _wrap_BMXGroupList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupList_isEmpty(void* imarg1);
void _wrap_BMXGroupList_clear(void* imarg1);
void _wrap_BMXGroupList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupList(void* imarg1);
void* _wrap_new_BMXGroupMemberList__SWIG_0();
void* _wrap_new_BMXGroupMemberList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupMemberList_size(void* imarg1);
unsigned long _wrap_BMXGroupMemberList_capacity(void* imarg1);
void _wrap_BMXGroupMemberList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupMemberList_isEmpty(void* imarg1);
void _wrap_BMXGroupMemberList_clear(void* imarg1);
void _wrap_BMXGroupMemberList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupMemberList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupMemberList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupMemberList(void* imarg1);
void* _wrap_new_BMXGroupBannedMemberList__SWIG_0();
void* _wrap_new_BMXGroupBannedMemberList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupBannedMemberList_size(void* imarg1);
unsigned long _wrap_BMXGroupBannedMemberList_capacity(void* imarg1);
void _wrap_BMXGroupBannedMemberList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupBannedMemberList_isEmpty(void* imarg1);
void _wrap_BMXGroupBannedMemberList_clear(void* imarg1);
void _wrap_BMXGroupBannedMemberList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupBannedMemberList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupBannedMemberList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupBannedMemberList(void* imarg1);
void* _wrap_new_BMXGroupSharedFileList__SWIG_0();
void* _wrap_new_BMXGroupSharedFileList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupSharedFileList_size(void* imarg1);
unsigned long _wrap_BMXGroupSharedFileList_capacity(void* imarg1);
void _wrap_BMXGroupSharedFileList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupSharedFileList_isEmpty(void* imarg1);
void _wrap_BMXGroupSharedFileList_clear(void* imarg1);
void _wrap_BMXGroupSharedFileList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupSharedFileList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupSharedFileList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupSharedFileList(void* imarg1);
void* _wrap_new_BMXGroupAnnouncementList__SWIG_0();
void* _wrap_new_BMXGroupAnnouncementList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupAnnouncementList_size(void* imarg1);
unsigned long _wrap_BMXGroupAnnouncementList_capacity(void* imarg1);
void _wrap_BMXGroupAnnouncementList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupAnnouncementList_isEmpty(void* imarg1);
void _wrap_BMXGroupAnnouncementList_clear(void* imarg1);
void _wrap_BMXGroupAnnouncementList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupAnnouncementList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupAnnouncementList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupAnnouncementList(void* imarg1);
void* _wrap_new_BMXRosterServiceApplicationList__SWIG_0();
void* _wrap_new_BMXRosterServiceApplicationList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRosterServiceApplicationList_size(void* imarg1);
unsigned long _wrap_BMXRosterServiceApplicationList_capacity(void* imarg1);
void _wrap_BMXRosterServiceApplicationList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRosterServiceApplicationList_isEmpty(void* imarg1);
void _wrap_BMXRosterServiceApplicationList_clear(void* imarg1);
void _wrap_BMXRosterServiceApplicationList_add(void* imarg1, void* imarg2);
void* _wrap_BMXRosterServiceApplicationList_get(void* imarg1, int imarg2);
void _wrap_BMXRosterServiceApplicationList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRosterServiceApplicationList(void* imarg1);
void* _wrap_new_BMXGroupApplicationList__SWIG_0();
void* _wrap_new_BMXGroupApplicationList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupApplicationList_size(void* imarg1);
unsigned long _wrap_BMXGroupApplicationList_capacity(void* imarg1);
void _wrap_BMXGroupApplicationList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupApplicationList_isEmpty(void* imarg1);
void _wrap_BMXGroupApplicationList_clear(void* imarg1);
void _wrap_BMXGroupApplicationList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupApplicationList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupApplicationList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupApplicationList(void* imarg1);
void* _wrap_new_BMXGroupInvitationList__SWIG_0();
void* _wrap_new_BMXGroupInvitationList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXGroupInvitationList_size(void* imarg1);
unsigned long _wrap_BMXGroupInvitationList_capacity(void* imarg1);
void _wrap_BMXGroupInvitationList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXGroupInvitationList_isEmpty(void* imarg1);
void _wrap_BMXGroupInvitationList_clear(void* imarg1);
void _wrap_BMXGroupInvitationList_add(void* imarg1, void* imarg2);
void* _wrap_BMXGroupInvitationList_get(void* imarg1, int imarg2);
void _wrap_BMXGroupInvitationList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXGroupInvitationList(void* imarg1);
void* _wrap_new_ListOfLongLong__SWIG_0();
void* _wrap_new_ListOfLongLong__SWIG_1(unsigned long imarg1);
unsigned long _wrap_ListOfLongLong_size(void* imarg1);
unsigned long _wrap_ListOfLongLong_capacity(void* imarg1);
void _wrap_ListOfLongLong_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_ListOfLongLong_isEmpty(void* imarg1);
void _wrap_ListOfLongLong_clear(void* imarg1);
void _wrap_ListOfLongLong_add(void* imarg1, long long * imarg2);
long long * _wrap_ListOfLongLong_get(void* imarg1, int imarg2);
void _wrap_ListOfLongLong_set(void* imarg1, int imarg2, long long * imarg3);
void _wrap_delete_ListOfLongLong(void* imarg1);
NSString* _wrap_getErrorMessage(int imarg1);
void* _wrap_new_BMXError(int imarg1);
void _wrap_delete_BMXError(void* imarg1);
int _wrap_BMXError_errorCode(void* imarg1);
NSString* _wrap_BMXError_description(void* imarg1);
int _wrap_CONNECT_MAX_RETRY_get();
void _wrap_delete_BMXDevice(void* imarg1);
int _wrap_BMXDevice_deviceSN(void* imarg1);
long long _wrap_BMXDevice_userId(void* imarg1);
int _wrap_BMXDevice_platform(void* imarg1);
NSString* _wrap_BMXDevice_userAgent(void* imarg1);
void _wrap_BMXDevice_setUserAgent(void* imarg1, NSString* imarg2);
BOOL _wrap_BMXDevice_isCurrentDevice(void* imarg1);
void _wrap_delete_BMXBaseObject(void* imarg1);
void* _wrap_new_BMXBaseObject();
void* _wrap_new_BMXSDKConfigHostConfig__SWIG_0();
void* _wrap_new_BMXSDKConfigHostConfig__SWIG_1(NSString* imarg1, int imarg2, NSString* imarg3);
void _wrap_BMXSDKConfigHostConfig_imHost_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfigHostConfig_imHost_get(void* imarg1);
void _wrap_BMXSDKConfigHostConfig_imPort_set(void* imarg1, int imarg2);
int _wrap_BMXSDKConfigHostConfig_imPort_get(void* imarg1);
void _wrap_BMXSDKConfigHostConfig_restHost_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfigHostConfig_restHost_get(void* imarg1);
void _wrap_delete_BMXSDKConfigHostConfig(void* imarg1);
void* _wrap_new_BMXGroupMember(long long imarg1, NSString* imarg2, long long imarg3);
void _wrap_delete_BMXGroupMember(void* imarg1);
void _wrap_BMXGroupMember_mUid_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupMember_mUid_get(void* imarg1);
void _wrap_BMXGroupMember_mGroupNickname_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupMember_mGroupNickname_get(void* imarg1);
void _wrap_BMXGroupMember_mCreateTime_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupMember_mCreateTime_get(void* imarg1);
void* _wrap_new_BMXGroupBannedMember();
void _wrap_delete_BMXGroupBannedMember(void* imarg1);
void _wrap_BMXGroupBannedMember_mUid_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupBannedMember_mUid_get(void* imarg1);
void _wrap_BMXGroupBannedMember_mGroupNickname_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupBannedMember_mGroupNickname_get(void* imarg1);
void _wrap_BMXGroupBannedMember_mCreateTime_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupBannedMember_mCreateTime_get(void* imarg1);
void _wrap_BMXGroupBannedMember_mExpired_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupBannedMember_mExpired_get(void* imarg1);
void* _wrap_new_BMXGroupSharedFile();
void _wrap_delete_BMXGroupSharedFile(void* imarg1);
void _wrap_BMXGroupSharedFile_mFileId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupSharedFile_mFileId_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mGroupId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupSharedFile_mGroupId_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mUploader_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupSharedFile_mUploader_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mSize_set(void* imarg1, int imarg2);
int _wrap_BMXGroupSharedFile_mSize_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mCreateTime_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupSharedFile_mCreateTime_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mUpdateTime_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupSharedFile_mUpdateTime_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mRatelUrl_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupSharedFile_mRatelUrl_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mUrl_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupSharedFile_mUrl_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mPath_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupSharedFile_mPath_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mDisplayName_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupSharedFile_mDisplayName_get(void* imarg1);
void _wrap_BMXGroupSharedFile_mType_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupSharedFile_mType_get(void* imarg1);
void* _wrap_new_BMXGroupAnnouncement();
void _wrap_delete_BMXGroupAnnouncement(void* imarg1);
void _wrap_BMXGroupAnnouncement_mTitle_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupAnnouncement_mTitle_get(void* imarg1);
void _wrap_BMXGroupAnnouncement_mContent_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupAnnouncement_mContent_get(void* imarg1);
void _wrap_BMXGroupAnnouncement_mAuthor_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupAnnouncement_mAuthor_get(void* imarg1);
void _wrap_BMXGroupAnnouncement_mCreateTime_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupAnnouncement_mCreateTime_get(void* imarg1);
void _wrap_BMXGroupAnnouncement_mId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupAnnouncement_mId_get(void* imarg1);
void* _wrap_new_BMXGroupInvitation();
void _wrap_delete_BMXGroupInvitation(void* imarg1);
void _wrap_BMXGroupInvitation_mGroupId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupInvitation_mGroupId_get(void* imarg1);
void _wrap_BMXGroupInvitation_mInviterId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupInvitation_mInviterId_get(void* imarg1);
void _wrap_BMXGroupInvitation_mReason_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupInvitation_mReason_get(void* imarg1);
void _wrap_BMXGroupInvitation_mStatus_set(void* imarg1, int imarg2);
int _wrap_BMXGroupInvitation_mStatus_get(void* imarg1);
void _wrap_BMXGroupInvitation_mExpired_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupInvitation_mExpired_get(void* imarg1);
void* _wrap_new_BMXGroupApplication();
void _wrap_delete_BMXGroupApplication(void* imarg1);
void _wrap_BMXGroupApplication_mGroupId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupApplication_mGroupId_get(void* imarg1);
void _wrap_BMXGroupApplication_mApplicationId_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupApplication_mApplicationId_get(void* imarg1);
void _wrap_BMXGroupApplication_mReason_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupApplication_mReason_get(void* imarg1);
void _wrap_BMXGroupApplication_mStatus_set(void* imarg1, int imarg2);
int _wrap_BMXGroupApplication_mStatus_get(void* imarg1);
void _wrap_BMXGroupApplication_mExpired_set(void* imarg1, long long imarg2);
long long _wrap_BMXGroupApplication_mExpired_get(void* imarg1);
void* _wrap_new_BMXGroupServiceCreateGroupOptions__SWIG_0();
void* _wrap_new_BMXGroupServiceCreateGroupOptions__SWIG_1(NSString* imarg1, NSString* imarg2, BOOL imarg3, BOOL imarg4);
void* _wrap_new_BMXGroupServiceCreateGroupOptions__SWIG_2(NSString* imarg1, NSString* imarg2, BOOL imarg3);
void* _wrap_new_BMXGroupServiceCreateGroupOptions__SWIG_3(NSString* imarg1, NSString* imarg2);
void _wrap_BMXGroupServiceCreateGroupOptions_mName_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupServiceCreateGroupOptions_mName_get(void* imarg1);
void _wrap_BMXGroupServiceCreateGroupOptions_mDescription_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupServiceCreateGroupOptions_mDescription_get(void* imarg1);
void _wrap_BMXGroupServiceCreateGroupOptions_mIsPublic_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXGroupServiceCreateGroupOptions_mIsPublic_get(void* imarg1);
void _wrap_BMXGroupServiceCreateGroupOptions_mIsChatroom_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXGroupServiceCreateGroupOptions_mIsChatroom_get(void* imarg1);
void _wrap_BMXGroupServiceCreateGroupOptions_mMessage_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXGroupServiceCreateGroupOptions_mMessage_get(void* imarg1);
void _wrap_BMXGroupServiceCreateGroupOptions_mMembers_set(void* imarg1, void* imarg2);
void* _wrap_BMXGroupServiceCreateGroupOptions_mMembers_get(void* imarg1);
void _wrap_delete_BMXGroupServiceCreateGroupOptions(void* imarg1);
void* _wrap_new_BMXMessageAttachmentSize__SWIG_0(double imarg1, double imarg2);
void* _wrap_new_BMXMessageAttachmentSize__SWIG_1(double imarg1);
void* _wrap_new_BMXMessageAttachmentSize__SWIG_2();
void _wrap_BMXMessageAttachmentSize_mWidth_set(void* imarg1, double imarg2);
double _wrap_BMXMessageAttachmentSize_mWidth_get(void* imarg1);
void _wrap_BMXMessageAttachmentSize_mHeight_set(void* imarg1, double imarg2);
double _wrap_BMXMessageAttachmentSize_mHeight_get(void* imarg1);
void _wrap_delete_BMXMessageAttachmentSize(void* imarg1);
void* _wrap_new_BMXPushUserProfileMessagePushSetting();
void _wrap_BMXPushUserProfileMessagePushSetting_mPushEnabled_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXPushUserProfileMessagePushSetting_mPushEnabled_get(void* imarg1);
void _wrap_BMXPushUserProfileMessagePushSetting_mSilenceStartTime_set(void* imarg1, int imarg2);
int _wrap_BMXPushUserProfileMessagePushSetting_mSilenceStartTime_get(void* imarg1);
void _wrap_BMXPushUserProfileMessagePushSetting_mSilenceEndTime_set(void* imarg1, int imarg2);
int _wrap_BMXPushUserProfileMessagePushSetting_mSilenceEndTime_get(void* imarg1);
void _wrap_BMXPushUserProfileMessagePushSetting_mPushStartTime_set(void* imarg1, int imarg2);
int _wrap_BMXPushUserProfileMessagePushSetting_mPushStartTime_get(void* imarg1);
void _wrap_BMXPushUserProfileMessagePushSetting_mPushEndTime_set(void* imarg1, int imarg2);
int _wrap_BMXPushUserProfileMessagePushSetting_mPushEndTime_get(void* imarg1);
void _wrap_delete_BMXPushUserProfileMessagePushSetting(void* imarg1);
void* _wrap_new_BMXRosterServiceApplication();
void _wrap_delete_BMXRosterServiceApplication(void* imarg1);
void _wrap_BMXRosterServiceApplication_mRosterId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRosterServiceApplication_mRosterId_get(void* imarg1);
void _wrap_BMXRosterServiceApplication_mReason_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRosterServiceApplication_mReason_get(void* imarg1);
void _wrap_BMXRosterServiceApplication_mStatus_set(void* imarg1, int imarg2);
int _wrap_BMXRosterServiceApplication_mStatus_get(void* imarg1);
void _wrap_BMXRosterServiceApplication_mExpire_set(void* imarg1, long long imarg2);
long long _wrap_BMXRosterServiceApplication_mExpire_get(void* imarg1);
void* _wrap_new_BMXUserProfileAuthQuestion();
void _wrap_BMXUserProfileAuthQuestion_mQuestion_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXUserProfileAuthQuestion_mQuestion_get(void* imarg1);
void _wrap_BMXUserProfileAuthQuestion_mAnswer_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXUserProfileAuthQuestion_mAnswer_get(void* imarg1);
void _wrap_delete_BMXUserProfileAuthQuestion(void* imarg1);
void* _wrap_new_BMXUserProfileMessageSetting();
void _wrap_BMXUserProfileMessageSetting_mPushEnabled_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXUserProfileMessageSetting_mPushEnabled_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mPushDetail_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXUserProfileMessageSetting_mPushDetail_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mPushNickname_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXUserProfileMessageSetting_mPushNickname_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mNotificationSound_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXUserProfileMessageSetting_mNotificationSound_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mNotificationVibrate_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXUserProfileMessageSetting_mNotificationVibrate_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mAutoDownloadAttachment_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXUserProfileMessageSetting_mAutoDownloadAttachment_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mSilenceStartTime_set(void* imarg1, int imarg2);
int _wrap_BMXUserProfileMessageSetting_mSilenceStartTime_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mSilenceEndTime_set(void* imarg1, int imarg2);
int _wrap_BMXUserProfileMessageSetting_mSilenceEndTime_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mPushStartTime_set(void* imarg1, int imarg2);
int _wrap_BMXUserProfileMessageSetting_mPushStartTime_get(void* imarg1);
void _wrap_BMXUserProfileMessageSetting_mPushEndTime_set(void* imarg1, int imarg2);
int _wrap_BMXUserProfileMessageSetting_mPushEndTime_get(void* imarg1);
void _wrap_delete_BMXUserProfileMessageSetting(void* imarg1);
void* _wrap_new_BMXRoomCreateOptions__SWIG_0(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, BOOL imarg5, BOOL imarg6);
void* _wrap_new_BMXRoomCreateOptions__SWIG_1(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, BOOL imarg5);
void* _wrap_new_BMXRoomCreateOptions__SWIG_2(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4);
void* _wrap_new_BMXRoomCreateOptions__SWIG_3(int imarg1, NSString* imarg2, NSString* imarg3);
void* _wrap_new_BMXRoomCreateOptions__SWIG_4(int imarg1, NSString* imarg2);
void* _wrap_new_BMXRoomCreateOptions__SWIG_5(int imarg1);
void* _wrap_new_BMXRoomCreateOptions__SWIG_6();
void _wrap_BMXRoomCreateOptions_mRoomId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomCreateOptions_mRoomId_get(void* imarg1);
void _wrap_BMXRoomCreateOptions_mDescription_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomCreateOptions_mDescription_get(void* imarg1);
void _wrap_BMXRoomCreateOptions_mSecret_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomCreateOptions_mSecret_get(void* imarg1);
void _wrap_BMXRoomCreateOptions_mPin_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomCreateOptions_mPin_get(void* imarg1);
void _wrap_BMXRoomCreateOptions_mIsPermanent_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomCreateOptions_mIsPermanent_get(void* imarg1);
void _wrap_BMXRoomCreateOptions_mIsPrivate_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomCreateOptions_mIsPrivate_get(void* imarg1);
void _wrap_delete_BMXRoomCreateOptions(void* imarg1);
void* _wrap_new_BMXRoomEditOptions__SWIG_0(NSString* imarg1, NSString* imarg2, NSString* imarg3, BOOL imarg4, BOOL imarg5);
void* _wrap_new_BMXRoomEditOptions__SWIG_1(NSString* imarg1, NSString* imarg2, NSString* imarg3, BOOL imarg4);
void* _wrap_new_BMXRoomEditOptions__SWIG_2(NSString* imarg1, NSString* imarg2, NSString* imarg3);
void* _wrap_new_BMXRoomEditOptions__SWIG_3(NSString* imarg1, NSString* imarg2);
void* _wrap_new_BMXRoomEditOptions__SWIG_4(NSString* imarg1);
void* _wrap_new_BMXRoomEditOptions__SWIG_5();
void _wrap_BMXRoomEditOptions_mNewDescription_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomEditOptions_mNewDescription_get(void* imarg1);
void _wrap_BMXRoomEditOptions_mNewSecret_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomEditOptions_mNewSecret_get(void* imarg1);
void _wrap_BMXRoomEditOptions_mNewPin_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomEditOptions_mNewPin_get(void* imarg1);
void _wrap_BMXRoomEditOptions_mNewIsPermanent_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomEditOptions_mNewIsPermanent_get(void* imarg1);
void _wrap_BMXRoomEditOptions_mNewIsPrivate_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomEditOptions_mNewIsPrivate_get(void* imarg1);
void _wrap_delete_BMXRoomEditOptions(void* imarg1);
void* _wrap_new_BMXRoomAllowdOptions();
void _wrap_BMXRoomAllowdOptions_action_set(void* imarg1, int imarg2);
int _wrap_BMXRoomAllowdOptions_action_get(void* imarg1);
void _wrap_BMXRoomAllowdOptions_tokens_set(void* imarg1, void* imarg2);
void* _wrap_BMXRoomAllowdOptions_tokens_get(void* imarg1);
void _wrap_delete_BMXRoomAllowdOptions(void* imarg1);
void* _wrap_new_BMXRoomModerateOptions__SWIG_0();
void* _wrap_new_BMXRoomModerateOptions__SWIG_1(long long imarg1, BOOL imarg2, BOOL imarg3, BOOL imarg4);
void* _wrap_new_BMXRoomModerateOptions__SWIG_2(long long imarg1, BOOL imarg2, BOOL imarg3);
void* _wrap_new_BMXRoomModerateOptions__SWIG_3(long long imarg1, BOOL imarg2);
void* _wrap_new_BMXRoomModerateOptions__SWIG_4(long long imarg1);
void _wrap_BMXRoomModerateOptions_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomModerateOptions_mUserId_get(void* imarg1);
void _wrap_BMXRoomModerateOptions_mMuteAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomModerateOptions_mMuteAudio_get(void* imarg1);
void _wrap_BMXRoomModerateOptions_mMuteVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomModerateOptions_mMuteVideo_get(void* imarg1);
void _wrap_BMXRoomModerateOptions_mMuteData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomModerateOptions_mMuteData_get(void* imarg1);
void _wrap_delete_BMXRoomModerateOptions(void* imarg1);
void* _wrap_new_BMXPubRoomJoinOptions__SWIG_0();
void* _wrap_new_BMXPubRoomJoinOptions__SWIG_1(long long imarg1, long long imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5);
void* _wrap_new_BMXPubRoomJoinOptions__SWIG_2(long long imarg1, long long imarg2, NSString* imarg3, NSString* imarg4);
void* _wrap_new_BMXPubRoomJoinOptions__SWIG_3(long long imarg1, long long imarg2, NSString* imarg3);
void* _wrap_new_BMXPubRoomJoinOptions__SWIG_4(long long imarg1, long long imarg2);
void _wrap_BMXPubRoomJoinOptions_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXPubRoomJoinOptions_mUserId_get(void* imarg1);
void _wrap_BMXPubRoomJoinOptions_mRoomId_set(void* imarg1, long long imarg2);
long long _wrap_BMXPubRoomJoinOptions_mRoomId_get(void* imarg1);
void _wrap_BMXPubRoomJoinOptions_mRoomPin_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXPubRoomJoinOptions_mRoomPin_get(void* imarg1);
void _wrap_BMXPubRoomJoinOptions_mDescription_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXPubRoomJoinOptions_mDescription_get(void* imarg1);
void _wrap_BMXPubRoomJoinOptions_mToken_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXPubRoomJoinOptions_mToken_get(void* imarg1);
void _wrap_delete_BMXPubRoomJoinOptions(void* imarg1);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_0(BOOL imarg1, BOOL imarg2, int imarg3, int imarg4, int imarg5, BOOL imarg6, NSString* imarg7);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_1(BOOL imarg1, BOOL imarg2, int imarg3, int imarg4, int imarg5, BOOL imarg6);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_2(BOOL imarg1, BOOL imarg2, int imarg3, int imarg4, int imarg5);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_3(BOOL imarg1, BOOL imarg2, int imarg3, int imarg4);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_4(BOOL imarg1, BOOL imarg2, int imarg3);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_5(BOOL imarg1, BOOL imarg2);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_6(BOOL imarg1);
void* _wrap_new_BMXRoomPubConfigureOptions__SWIG_7();
void _wrap_BMXRoomPubConfigureOptions_mEnableAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomPubConfigureOptions_mEnableAudio_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mEnableVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomPubConfigureOptions_mEnableVideo_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mEnableData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomPubConfigureOptions_mEnableData_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mDisplay_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomPubConfigureOptions_mDisplay_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mWidth_set(void* imarg1, int imarg2);
int _wrap_BMXRoomPubConfigureOptions_mWidth_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mHeight_set(void* imarg1, int imarg2);
int _wrap_BMXRoomPubConfigureOptions_mHeight_get(void* imarg1);
void _wrap_BMXRoomPubConfigureOptions_mBitrate_set(void* imarg1, int imarg2);
int _wrap_BMXRoomPubConfigureOptions_mBitrate_get(void* imarg1);
void _wrap_delete_BMXRoomPubConfigureOptions(void* imarg1);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_0();
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_1(void* imarg1, long long imarg2, BOOL imarg3, BOOL imarg4, BOOL imarg5, BOOL imarg6);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_2(void* imarg1, long long imarg2, BOOL imarg3, BOOL imarg4, BOOL imarg5);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_3(void* imarg1, long long imarg2, BOOL imarg3, BOOL imarg4);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_4(void* imarg1, long long imarg2, BOOL imarg3);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_5(void* imarg1, long long imarg2);
void* _wrap_new_BMXRoomSubJoinOptions__SWIG_6(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomSubJoinOptions_mUserId_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mRoomId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomSubJoinOptions_mRoomId_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mRoomPin_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomSubJoinOptions_mRoomPin_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mDescription_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomSubJoinOptions_mDescription_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mToken_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomSubJoinOptions_mToken_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mPrivateId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomSubJoinOptions_mPrivateId_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mEnableAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubJoinOptions_mEnableAudio_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mEnableVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubJoinOptions_mEnableVideo_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mEnableData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubJoinOptions_mEnableData_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_mAutoClosePc_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubJoinOptions_mAutoClosePc_get(void* imarg1);
void _wrap_BMXRoomSubJoinOptions_streams_set(void* imarg1, void* imarg2);
void* _wrap_BMXRoomSubJoinOptions_streams_get(void* imarg1);
void _wrap_delete_BMXRoomSubJoinOptions(void* imarg1);
void* _wrap_new_BMXRoomSubConfigureOptions__SWIG_0(BOOL imarg1, BOOL imarg2, BOOL imarg3);
void* _wrap_new_BMXRoomSubConfigureOptions__SWIG_1(BOOL imarg1, BOOL imarg2);
void* _wrap_new_BMXRoomSubConfigureOptions__SWIG_2(BOOL imarg1);
void* _wrap_new_BMXRoomSubConfigureOptions__SWIG_3();
void _wrap_BMXRoomSubConfigureOptions_mEnableAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubConfigureOptions_mEnableAudio_get(void* imarg1);
void _wrap_BMXRoomSubConfigureOptions_mEnableVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubConfigureOptions_mEnableVideo_get(void* imarg1);
void _wrap_BMXRoomSubConfigureOptions_mEnableData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubConfigureOptions_mEnableData_get(void* imarg1);
void _wrap_delete_BMXRoomSubConfigureOptions(void* imarg1);
void* _wrap_new_BMXRoomSubSwitchOptions__SWIG_0();
void* _wrap_new_BMXRoomSubSwitchOptions__SWIG_1(long long imarg1, BOOL imarg2, BOOL imarg3, BOOL imarg4);
void* _wrap_new_BMXRoomSubSwitchOptions__SWIG_2(long long imarg1, BOOL imarg2, BOOL imarg3);
void* _wrap_new_BMXRoomSubSwitchOptions__SWIG_3(long long imarg1, BOOL imarg2);
void* _wrap_new_BMXRoomSubSwitchOptions__SWIG_4(long long imarg1);
void _wrap_BMXRoomSubSwitchOptions_mFeedId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomSubSwitchOptions_mFeedId_get(void* imarg1);
void _wrap_BMXRoomSubSwitchOptions_mEnableAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubSwitchOptions_mEnableAudio_get(void* imarg1);
void _wrap_BMXRoomSubSwitchOptions_mEnableVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubSwitchOptions_mEnableVideo_get(void* imarg1);
void _wrap_BMXRoomSubSwitchOptions_mEnableData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomSubSwitchOptions_mEnableData_get(void* imarg1);
void _wrap_delete_BMXRoomSubSwitchOptions(void* imarg1);
void _wrap_delete_BMXMessageAttachment(void* imarg1);
int _wrap_BMXMessageAttachment_type(void* imarg1);
void* _wrap_BMXMessageAttachment_clone(void* imarg1);
NSString* _wrap_kMentionAll_get();
NSString* _wrap_kMentionList_get();
NSString* _wrap_kMentionedMessage_get();
NSString* _wrap_kPushMessage_get();
NSString* _wrap_kSenderNickname_get();
NSString* _wrap_kGroupAck_get();
NSString* _wrap_kGroupMemberList_get();
NSString* _wrap_kIOSConfig_get();
NSString* _wrap_kAndroidConfig_get();
NSString* _wrap_kPushShowBeginTime_get();
NSString* _wrap_kPushShowEndTime_get();
NSString* _wrap_kPushTitle_get();
NSString* _wrap_kSilence_get();
NSString* _wrap_kBadge_get();
NSString* _wrap_kUsername_get();
NSString* _wrap_kRTCAction_get();
NSString* _wrap_kRTCCallType_get();
NSString* _wrap_kRTCRoomId_get();
NSString* _wrap_kRTCInitiator_get();
NSString* _wrap_kRTCCallId_get();
NSString* _wrap_kRTCRoomType_get();
NSString* _wrap_kRTCPin_get();
void _wrap_delete_BMXMessageConfig(void* imarg1);
void _wrap_BMXMessageConfig_setMentionAll(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessageConfig_getMentionAll(void* imarg1);
void _wrap_BMXMessageConfig_setMentionList(void* imarg1, void* imarg2);
void* _wrap_BMXMessageConfig_getMentionList(void* imarg1);
void _wrap_BMXMessageConfig_setMentionedMessage(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getMentionedMessage(void* imarg1);
void _wrap_BMXMessageConfig_setPushMessage(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushMessage(void* imarg1);
void _wrap_BMXMessageConfig_setSenderNickname(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getSenderNickname(void* imarg1);
void _wrap_BMXMessageConfig_setGroupMemberList(void* imarg1, void* imarg2);
void* _wrap_BMXMessageConfig_getGroupMemberList(void* imarg1);
void _wrap_BMXMessageConfig_addGroupMember(void* imarg1, long long imarg2);
void _wrap_BMXMessageConfig_removeGroupMember(void* imarg1, long long imarg2);
void _wrap_BMXMessageConfig_clearGroupMemberList(void* imarg1);
void _wrap_BMXMessageConfig_setIOSConfig(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getIOSConfig(void* imarg1);
void _wrap_BMXMessageConfig_setAndroidConfig(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getAndroidConfig(void* imarg1);
void _wrap_BMXMessageConfig_setPushShowBeginTime(void* imarg1, int imarg2);
int _wrap_BMXMessageConfig_getPushShowBeginTime(void* imarg1);
void _wrap_BMXMessageConfig_setPushShowEndTime(void* imarg1, int imarg2);
int _wrap_BMXMessageConfig_getPushShowEndTime(void* imarg1);
void _wrap_BMXMessageConfig_setPushTitle(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushTitle(void* imarg1);
void _wrap_BMXMessageConfig_setPushTitleLocKey(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushTitleLocKey(void* imarg1);
void _wrap_BMXMessageConfig_setPushTitleLocArgs(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushTitleLocArgs(void* imarg1);
void _wrap_BMXMessageConfig_setPushMessageLocKey(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushMessageLocKey(void* imarg1);
void _wrap_BMXMessageConfig_setPushMessageLocArgs(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getPushMessageLocArgs(void* imarg1);
BOOL _wrap_BMXMessageConfig_isSilence(void* imarg1);
BOOL _wrap_BMXMessageConfig_isPeerDrop(void* imarg1);
int _wrap_BMXMessageConfig_getBadgeCountType(void* imarg1);
int _wrap_BMXMessageConfig_getBadgeCount(void* imarg1, int imarg2);
void _wrap_BMXMessageConfig_setUsername(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessageConfig_getUsername(void* imarg1);
void _wrap_BMXMessageConfig_setRTCCallInfo(void* imarg1, int imarg2, long long imarg3, long long imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXMessageConfig_setRTCPickupInfo(void* imarg1, NSString* imarg2);
void _wrap_BMXMessageConfig_setRTCHangupInfo(void* imarg1, NSString* imarg2, BOOL imarg3);
NSString* _wrap_BMXMessageConfig_getRTCAction(void* imarg1);
int _wrap_BMXMessageConfig_getRTCCallType(void* imarg1);
long long _wrap_BMXMessageConfig_getRTCRoomId(void* imarg1);
long long _wrap_BMXMessageConfig_getRTCInitiator(void* imarg1);
NSString* _wrap_BMXMessageConfig_getRTCCallId(void* imarg1);
int _wrap_BMXMessageConfig_getRTCRoomType(void* imarg1);
NSString* _wrap_BMXMessageConfig_getRTCPin(void* imarg1);
void* _wrap_BMXMessageConfig_createMessageConfig(BOOL imarg1);
NSString* _wrap_encodeBMXMessageConfig(void* imarg1);
void* _wrap_decodeBMXMessageConfig(NSString* imarg1);
void _wrap_delete_BMXMessage(void* imarg1);
long long _wrap_BMXMessage_msgId(void* imarg1);
long long _wrap_BMXMessage_clientMsgId(void* imarg1);
long long _wrap_BMXMessage_fromId(void* imarg1);
long long _wrap_BMXMessage_toId(void* imarg1);
int _wrap_BMXMessage_type(void* imarg1);
long long _wrap_BMXMessage_conversationId(void* imarg1);
int _wrap_BMXMessage_deliveryStatus(void* imarg1);
void _wrap_BMXMessage_setDeliveryStatus(void* imarg1, int imarg2);
long long _wrap_BMXMessage_serverTimestamp(void* imarg1);
void _wrap_BMXMessage_setServerTimestamp(void* imarg1, long long imarg2);
long long _wrap_BMXMessage_editTimestamp(void* imarg1);
void _wrap_BMXMessage_setEditTimestamp(void* imarg1, long long imarg2);
long long _wrap_BMXMessage_clientTimestamp(void* imarg1);
void _wrap_BMXMessage_setClientTimestamp(void* imarg1, long long imarg2);
BOOL _wrap_BMXMessage_isPlayed(void* imarg1);
void _wrap_BMXMessage_setIsPlayed(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isPlayAcked(void* imarg1);
void _wrap_BMXMessage_setIsPlayAcked(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isReceiveMsg(void* imarg1);
void _wrap_BMXMessage_setIsReceiveMsg(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isRead(void* imarg1);
void _wrap_BMXMessage_setIsRead(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isReadAcked(void* imarg1);
void _wrap_BMXMessage_setIsReadAcked(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isDeliveryAcked(void* imarg1);
void _wrap_BMXMessage_setIsDeliveryAcked(void* imarg1, BOOL imarg2);
NSString* _wrap_BMXMessage_appendedContent(void* imarg1);
void _wrap_BMXMessage_setAppendedContent(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessage_replaceContent(void* imarg1);
void _wrap_BMXMessage_setReplaceContent(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessage_content(void* imarg1);
void _wrap_BMXMessage_setContent(void* imarg1, NSString* imarg2);
int _wrap_BMXMessage_contentType(void* imarg1);
void* _wrap_BMXMessage_attachment(void* imarg1);
void* _wrap_BMXMessage_config(void* imarg1);
void _wrap_BMXMessage_setConfig(void* imarg1, void* imarg2);
void* _wrap_BMXMessage_replaceConfig(void* imarg1);
void _wrap_BMXMessage_setReplaceConfig(void* imarg1, void* imarg2);
NSString* _wrap_BMXMessage_replaceExtension(void* imarg1);
void _wrap_BMXMessage_setReplaceExtension(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXMessage_extension(void* imarg1);
void _wrap_BMXMessage_setExtension(void* imarg1, NSString* imarg2);
int _wrap_BMXMessage_deliveryQos(void* imarg1);
void _wrap_BMXMessage_setDeliveryQos(void* imarg1, int imarg2);
NSString* _wrap_BMXMessage_senderName(void* imarg1);
void _wrap_BMXMessage_setSenderName(void* imarg1, NSString* imarg2);
int _wrap_BMXMessage_groupAckCount(void* imarg1);
void _wrap_BMXMessage_setGroupAckCount(void* imarg1, int imarg2);
int _wrap_BMXMessage_groupAckUnreadCount(void* imarg1);
void _wrap_BMXMessage_setGroupAckUnreadCount(void* imarg1, int imarg2);
BOOL _wrap_BMXMessage_groupAckReadAll(void* imarg1);
int _wrap_BMXMessage_groupPlayAckCount(void* imarg1);
void _wrap_BMXMessage_setGroupPlayAckCount(void* imarg1, int imarg2);
int _wrap_BMXMessage_groupPlayAckUnreadCount(void* imarg1);
void _wrap_BMXMessage_setGroupPlayAckUnreadCount(void* imarg1, int imarg2);
BOOL _wrap_BMXMessage_groupPlayAckReadAll(void* imarg1);
void _wrap_BMXMessage_setPriority(void* imarg1, int imarg2);
int _wrap_BMXMessage_priority(void* imarg1);
void _wrap_BMXMessage_setPushMessageMode(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXMessage_isPushMessage(void* imarg1);
void* _wrap_BMXMessage_createMessage__SWIG_0(long long imarg1, long long imarg2, int imarg3, long long imarg4, NSString* imarg5);
void* _wrap_BMXMessage_createMessage__SWIG_1(long long imarg1, long long imarg2, int imarg3, long long imarg4, void* imarg5, int type);
void* _wrap_BMXMessage_createCommandMessage__SWIG_0(long long imarg1, long long imarg2, int imarg3, long long imarg4, NSString* imarg5);
void* _wrap_BMXMessage_createRTCMessage__SWIG_0(long long imarg1, long long imarg2, int imarg3, long long imarg4, NSString* imarg5);
void* _wrap_BMXMessage_createMessage__SWIG_2(long long imarg1, long long imarg2, long long imarg3, int imarg4, long long imarg5, NSString* imarg6, long long imarg7);
void* _wrap_BMXMessage_createMessage__SWIG_3(long long imarg1, long long imarg2, long long imarg3, int imarg4, long long imarg5, void* imarg6, long long imarg7, int type);
void* _wrap_BMXMessage_createCommandMessage__SWIG_1(long long imarg1, long long imarg2, long long imarg3, int imarg4, long long imarg5, NSString* imarg6, long long imarg7);
void* _wrap_BMXMessage_createRTCMessage__SWIG_1(long long imarg1, long long imarg2, long long imarg3, int imarg4, long long imarg5, NSString* imarg6, long long imarg7);
void* _wrap_BMXMessage_createForwardMessage(void* imarg1, long long imarg2, long long imarg3, int imarg4, long long imarg5);
void _wrap_delete_BMXConversation(void* imarg1);
long long _wrap_BMXConversation_conversationId(void* imarg1);
int _wrap_BMXConversation_type(void* imarg1);
void* _wrap_BMXConversation_lastMsg(void* imarg1);
int _wrap_BMXConversation_unreadNumber(void* imarg1);
int _wrap_BMXConversation_messageCount(void* imarg1);   
BOOL _wrap_BMXConversation_isMuteNotification(void* imarg1);
NSString* _wrap_BMXConversation_extension(void* imarg1);
int _wrap_BMXConversation_setExtension(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXConversation_editMessage(void* imarg1);
int _wrap_BMXConversation_setEditMessage(void* imarg1, NSString* imarg2);
int _wrap_BMXConversation_setMessagePlayedStatus(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXConversation_setMessageReadStatus(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXConversation_setAllMessagesRead(void* imarg1);
int _wrap_BMXConversation_updateMessageExtension(void* imarg1, void* imarg2);
int _wrap_BMXConversation_insertMessage(void* imarg1, void* imarg2);
void* _wrap_BMXConversation_loadMessage(void* imarg1, long long imarg2);
int _wrap_BMXConversation_removeAllMessages(void* imarg1);
int _wrap_BMXConversation_loadMessages__SWIG_0(void* imarg1, long long imarg2, unsigned long imarg3, void* imarg4, int imarg5);
int _wrap_BMXConversation_loadMessages__SWIG_1(void* imarg1, long long imarg2, unsigned long imarg3, void* imarg4);
int _wrap_BMXConversation_searchMessagesByKeyWords__SWIG_0(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXConversation_searchMessagesByKeyWords__SWIG_1(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXConversation_searchMessages__SWIG_0(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXConversation_searchMessages__SWIG_1(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXConversation_searchMessagesByType__SWIG_0(void* imarg1, int imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXConversation_searchMessagesByType__SWIG_1(void* imarg1, int imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXConversation_searchMessages__SWIG_2(void* imarg1, int imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXConversation_searchMessages__SWIG_3(void* imarg1, int imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXConversation_refreshConversation(void* imarg1);
void* _wrap_new_BMXSDKConfig__SWIG_0(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5, NSString* imarg6, NSString* imarg7, BOOL imarg8);
void* _wrap_new_BMXSDKConfig__SWIG_1(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5, NSString* imarg6, NSString* imarg7);
void* _wrap_new_BMXSDKConfig__SWIG_2(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5, NSString* imarg6, NSString* imarg7, NSString* imarg8, NSString* imarg9, BOOL imarg10);
void* _wrap_new_BMXSDKConfig__SWIG_3(int imarg1, NSString* imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5, NSString* imarg6, NSString* imarg7, NSString* imarg8, NSString* imarg9);
void _wrap_delete_BMXSDKConfig(void* imarg1);
NSString* _wrap_BMXSDKConfig_getDataDir(void* imarg1);
NSString* _wrap_BMXSDKConfig_getCacheDir(void* imarg1);
int _wrap_BMXSDKConfig_getClientType(void* imarg1);
NSString* _wrap_BMXSDKConfig_getVsn(void* imarg1);
NSString* _wrap_BMXSDKConfig_getSDKVersion(void* imarg1);
NSString* _wrap_BMXSDKConfig_getPushCertName(void* imarg1);
void _wrap_BMXSDKConfig_setPushCertName(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfig_getUserAgent(void* imarg1);
BOOL _wrap_BMXSDKConfig_carryUsernameInMessage(void* imarg1);
void _wrap_BMXSDKConfig_setCarryUsernameInMessage(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXSDKConfig_enableDeliveryAck(void* imarg1);
void _wrap_BMXSDKConfig_setEnableDeliveryAck(void* imarg1, BOOL imarg2);
int _wrap_BMXSDKConfig_getLogLevel(void* imarg1);
void _wrap_BMXSDKConfig_setLogLevel(void* imarg1, int imarg2);
BOOL _wrap_BMXSDKConfig_getConsoleOutput(void* imarg1);
void _wrap_BMXSDKConfig_setConsoleOutput(void* imarg1, BOOL imarg2);
void _wrap_BMXSDKConfig_setHostConfig(void* imarg1, void* imarg2);
void* _wrap_BMXSDKConfig_getHostConfig(void* imarg1);
BOOL _wrap_BMXSDKConfig_getLoadAllServerConversations(void* imarg1);
void _wrap_BMXSDKConfig_setLoadAllServerConversations__SWIG_0(void* imarg1, BOOL imarg2);
void _wrap_BMXSDKConfig_setLoadAllServerConversations__SWIG_1(void* imarg1);
NSString* _wrap_BMXSDKConfig_getDeviceUuid(void* imarg1);
void _wrap_BMXSDKConfig_setDeviceUuid(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfig_getDBCryptoKey(void* imarg1);
void _wrap_BMXSDKConfig_setDBCryptoKey(void* imarg1, NSString* imarg2);
BOOL _wrap_BMXSDKConfig_getVerifyCertificate(void* imarg1);
void _wrap_BMXSDKConfig_setVerifyCertificate__SWIG_0(void* imarg1, BOOL imarg2);
void _wrap_BMXSDKConfig_setVerifyCertificate__SWIG_1(void* imarg1);
BOOL _wrap_BMXSDKConfig_getEnableDNS(void* imarg1);
void _wrap_BMXSDKConfig_setEnableDNS__SWIG_0(void* imarg1, BOOL imarg2);
void _wrap_BMXSDKConfig_setEnableDNS__SWIG_1(void* imarg1);
NSString* _wrap_BMXSDKConfig_getUserDNSAddress(void* imarg1);
void _wrap_BMXSDKConfig_setUserDNSAddress(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfig_getAppID(void* imarg1);
void _wrap_BMXSDKConfig_setAppID(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXSDKConfig_getAppSecret(void* imarg1);
void _wrap_BMXSDKConfig_setAppSecret(void* imarg1, NSString* imarg2);
int _wrap_BMXSDKConfig_getPushProviderType(void* imarg1);
void _wrap_BMXSDKConfig_setPushProviderType(void* imarg1, int imarg2);
int _wrap_BMXSDKConfig_getPushEnvironmentType(void* imarg1);
void _wrap_BMXSDKConfig_setEnvironmentType(void* imarg1, int imarg2);
long long _wrap_BMXSDKConfig_getDebugLogReceiverId(void* imarg1);
void _wrap_BMXSDKConfig_setDebugLogReceiverId(void* imarg1, long long imarg2);
void _wrap_delete_BMXNetworkListener(void* imarg1);
void _wrap_BMXNetworkListener_onNetworkChanged(void* imarg1, int imarg2, BOOL imarg3);
void _wrap_delete_BMXChatService(void* imarg1);
void _wrap_BMXChatService_sendMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_resendMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_recallMessage(void* imarg1, void* imarg2);
int _wrap_BMXChatService_forwardMessage__SWIG_0(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXChatService_forwardMessage__SWIG_1(void* imarg1, void* imarg2);
void _wrap_BMXChatService_ackMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_ackMessageDelivered(void* imarg1, void* imarg2);
void _wrap_BMXChatService_ackPlayMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_appendMessageContent(void* imarg1, void* imarg2);
void _wrap_BMXChatService_replaceMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_readCancel(void* imarg1, void* imarg2);
void _wrap_BMXChatService_readAllMessage(void* imarg1, void* imarg2);
void _wrap_BMXChatService_removeMessage__SWIG_0(void* imarg1, void* imarg2, BOOL imarg3);
void _wrap_BMXChatService_removeMessage__SWIG_1(void* imarg1, void* imarg2);
void _wrap_BMXChatService_downloadThumbnail__SWIG_0(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatService_downloadThumbnail__SWIG_1(void* imarg1, void* imarg2);
void _wrap_BMXChatService_downloadAttachment(void* imarg1, void* imarg2);
void _wrap_BMXChatService_downloadAttachmentByUrl(void* imarg1, long long imarg2, NSString* imarg3, NSString* imarg4);
void _wrap_BMXChatService_cancelUploadAttachment(void* imarg1, void* imarg2);
void _wrap_BMXChatService_cancelDownloadAttachment(void* imarg1, void* imarg2);
int _wrap_BMXChatService_transferingNum(void* imarg1);
int _wrap_BMXChatService_insertMessages(void* imarg1, void* imarg2);
void* _wrap_BMXChatService_getMessage(void* imarg1, long long imarg2);
void _wrap_BMXChatService_deleteConversation__SWIG_0(void* imarg1, long long imarg2, BOOL imarg3);
void _wrap_BMXChatService_deleteConversation__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_BMXChatService_openConversation__SWIG_0(void* imarg1, long long imarg2, int imarg3, BOOL imarg4);
void* _wrap_BMXChatService_openConversation__SWIG_1(void* imarg1, long long imarg2, int imarg3);
NSString* _wrap_BMXChatService_attachmentDir(void* imarg1);
NSString* _wrap_BMXChatService_attachmentDirForConversation(void* imarg1, long long imarg2);
void* _wrap_BMXChatService_getAllConversations(void* imarg1);
int _wrap_BMXChatService_getAllConversationsUnreadCount(void* imarg1);
int _wrap_BMXChatService_retrieveHistoryMessages(void* imarg1, void* imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXChatService_searchMessagesByKeyWords__SWIG_0(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXChatService_searchMessagesByKeyWords__SWIG_1(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXChatService_searchMessages__SWIG_0(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5, int imarg6);
int _wrap_BMXChatService_searchMessages__SWIG_1(void* imarg1, NSString* imarg2, long long imarg3, unsigned long imarg4, void* imarg5);
int _wrap_BMXChatService_getGroupAckMessageUserIdList(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXChatService_getGroupAckMessageUnreadUserIdList(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXChatService_getGroupPlayAckMessageUserIdList(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXChatService_getGroupUnPlayAckMessageUserIdList(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXChatService_addChatListener(void* imarg1, void* imarg2);
void _wrap_BMXChatService_removeChatListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXChatServiceListener();
void _wrap_delete_BMXChatServiceListener(void* imarg1);
void _wrap_BMXChatServiceListener_onStatusChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onAttachmentUploadProgressChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onContentAppendChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onReplaceChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onRecallStatusChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onReceive(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveCommandMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveSystemMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveReadAcks(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveDeliverAcks(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveRecallMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveReadCancels(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveReadAllMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveDeleteMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceivePlayAcks(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveAppendContentMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onReceiveReplaceMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onAttachmentStatusChanged(void* imarg1, void* imarg2, int imarg3, int imarg4);
void _wrap_BMXChatServiceListener_onAttachmentDownloadByUrlStatusChanged(void* imarg1, long long imarg2, int imarg3, int imarg4);
void _wrap_BMXChatServiceListener_onRetrieveHistoryMessages(void* imarg1, void* imarg2);
void _wrap_BMXChatServiceListener_onLoadAllConversation(void* imarg1);
void _wrap_BMXChatServiceListener_onConversationCreate(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXChatServiceListener_onConversationDelete(void* imarg1, long long imarg2, int imarg3);
void _wrap_BMXChatServiceListener_onTotalUnreadCountChanged(void* imarg1, int imarg2);
void _wrap_BMXChatServiceListener_registerChatService(void* imarg1, void* imarg2);
void _wrap_delete_BMXPushService(void* imarg1);
int _wrap_BMXPushService_start__SWIG_0(void* imarg1, NSString* imarg2, NSString* imarg3);
int _wrap_BMXPushService_start__SWIG_1(void* imarg1, NSString* imarg2);
int _wrap_BMXPushService_start__SWIG_2(void* imarg1);
int _wrap_BMXPushService_stop(void* imarg1);
int _wrap_BMXPushService_resume(void* imarg1);
int _wrap_BMXPushService_unbindAlias(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXPushService_getToken(void* imarg1);
NSString* _wrap_BMXPushService_getCert(void* imarg1);
int _wrap_BMXPushService_status(void* imarg1);
int _wrap_BMXPushService_bindDeviceToken(void* imarg1, NSString* imarg2);
int _wrap_BMXPushService_bindVoipToken(void* imarg1, NSString* imarg2);
int _wrap_BMXPushService_getPushProfile(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXPushService_setTags(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXPushService_getTags(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXPushService_deleteTags(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXPushService_clearTags(void* imarg1, NSString* imarg2);
int _wrap_BMXPushService_setBadge(void* imarg1, int imarg2);
int _wrap_BMXPushService_setPushMode__SWIG_0(void* imarg1, BOOL imarg2);
int _wrap_BMXPushService_setPushMode__SWIG_1(void* imarg1);
int _wrap_BMXPushService_setPushTime(void* imarg1, int imarg2, int imarg3);
int _wrap_BMXPushService_setSilenceTime(void* imarg1, int imarg2, int imarg3);
int _wrap_BMXPushService_setRunBackgroundMode__SWIG_0(void* imarg1, BOOL imarg2);
int _wrap_BMXPushService_setRunBackgroundMode__SWIG_1(void* imarg1);
int _wrap_BMXPushService_setGeoFenceMode__SWIG_0(void* imarg1, BOOL imarg2, BOOL imarg3);
int _wrap_BMXPushService_setGeoFenceMode__SWIG_1(void* imarg1, BOOL imarg2);
int _wrap_BMXPushService_setGeoFenceMode__SWIG_2(void* imarg1);
void _wrap_BMXPushService_clearNotification(void* imarg1, long long imarg2);
void _wrap_BMXPushService_clearAllNotifications(void* imarg1);
void _wrap_BMXPushService_sendMessage(void* imarg1, NSString* imarg2);
int _wrap_BMXPushService_loadLocalPushMessages__SWIG_0(void* imarg1, long long imarg2, unsigned long imarg3, void* imarg4, int imarg5);
int _wrap_BMXPushService_loadLocalPushMessages__SWIG_1(void* imarg1, long long imarg2, unsigned long imarg3, void* imarg4);
void _wrap_BMXPushService_addPushListener(void* imarg1, void* imarg2);
void _wrap_BMXPushService_removePushListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXPushServiceListener();
void _wrap_delete_BMXPushServiceListener(void* imarg1);
void _wrap_BMXPushServiceListener_onPushStart(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onPushStop(void* imarg1);
void _wrap_BMXPushServiceListener_onCertRetrieved(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onSetTags(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onGetTags(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onDeleteTags(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onClearTags(void* imarg1, NSString* imarg2);
void _wrap_BMXPushServiceListener_onReceivePush(void* imarg1, void* imarg2);
void _wrap_BMXPushServiceListener_onStatusChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXPushServiceListener_registerPushService(void* imarg1, void* imarg2);
void* _wrap_BMXClient_create(void* imarg1);
void _wrap_delete_BMXClient(void* imarg1);
void* _wrap_BMXClient_getSDKConfig(void* imarg1);
void* _wrap_BMXClient_getUserService(void* imarg1);
void* _wrap_BMXClient_getChatService(void* imarg1);
void* _wrap_BMXClient_getGroupService(void* imarg1);
void* _wrap_BMXClient_getRosterService(void* imarg1);
void* _wrap_BMXClient_getPushService(void* imarg1);
void* _wrap_BMXClient_getRTCService(void* imarg1);
int _wrap_BMXClient_signUpNewUser(void* imarg1, NSString* imarg2, NSString* imarg3, void** imarg4);
int _wrap_BMXClient_signInByName(void* imarg1, NSString* imarg2, NSString* imarg3);
int _wrap_BMXClient_signInById(void* imarg1, long long imarg2, NSString* imarg3);
int _wrap_BMXClient_fastSignInByName(void* imarg1, NSString* imarg2, NSString* imarg3);
int _wrap_BMXClient_fastSignInById(void* imarg1, long long imarg2, NSString* imarg3);
int _wrap_BMXClient_signOut__SWIG_0(void* imarg1, long long imarg2, BOOL imarg3);
int _wrap_BMXClient_signOut__SWIG_1(void* imarg1, long long imarg2);
int _wrap_BMXClient_signOut__SWIG_2(void* imarg1);
int _wrap_BMXClient_deleteAccount(void* imarg1, NSString* imarg2);
int _wrap_BMXClient_connectStatus(void* imarg1);
int _wrap_BMXClient_signInStatus(void* imarg1);
void _wrap_BMXClient_reconnect(void* imarg1);
void _wrap_BMXClient_onNetworkChanged(void* imarg1, int imarg2, BOOL imarg3);
void _wrap_BMXClient_disconnect(void* imarg1);
int _wrap_BMXClient_changeAppId__SWIG_0(void* imarg1, NSString* imarg2, NSString* imarg3);
int _wrap_BMXClient_changeAppId__SWIG_1(void* imarg1, NSString* imarg2);
int _wrap_BMXClient_initializeServerConfig(void* imarg1, BOOL imarg2);
void _wrap_BMXClient_sendMessage(void* imarg1, void* imarg2);
void* _wrap_new_BMXFileAttachment__SWIG_0(NSString* imarg1, NSString* imarg2);
void* _wrap_new_BMXFileAttachment__SWIG_1(NSString* imarg1);
void* _wrap_new_BMXFileAttachment__SWIG_2(NSString* imarg1, NSString* imarg2, long long imarg3);
void _wrap_delete_BMXFileAttachment(void* imarg1);
int _wrap_BMXFileAttachment_type(void* imarg1);
void* _wrap_BMXFileAttachment_clone(void* imarg1);
NSString* _wrap_BMXFileAttachment_path(void* imarg1);
NSString* _wrap_BMXFileAttachment_displayName(void* imarg1);
NSString* _wrap_BMXFileAttachment_ratelUrl(void* imarg1);
NSString* _wrap_BMXFileAttachment_url(void* imarg1);
long long _wrap_BMXFileAttachment_fileLength(void* imarg1);
int _wrap_BMXFileAttachment_downloadStatus(void* imarg1);
void* _wrap_BMXFileAttachment_dynamic_cast(void* imarg1);
void _wrap_BMXVideoConfig_width_set(void* imarg1, int imarg2);
int _wrap_BMXVideoConfig_width_get(void* imarg1);
void _wrap_BMXVideoConfig_height_set(void* imarg1, int imarg2);
int _wrap_BMXVideoConfig_height_get(void* imarg1);
void _wrap_BMXVideoConfig_frameRate_set(void* imarg1, int imarg2);
int _wrap_BMXVideoConfig_frameRate_get(void* imarg1);
void _wrap_BMXVideoConfig_profile_set(void* imarg1, int imarg2);
int _wrap_BMXVideoConfig_profile_get(void* imarg1);
void* _wrap_new_BMXVideoConfig();
void _wrap_delete_BMXVideoConfig(void* imarg1);
void _wrap_BMXRoomAuth_mRoomId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomAuth_mRoomId_get(void* imarg1);
void _wrap_BMXRoomAuth_mToken_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomAuth_mToken_get(void* imarg1);
void _wrap_BMXRoomAuth_mOptionalInfo_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomAuth_mOptionalInfo_get(void* imarg1);
void _wrap_BMXRoomAuth_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomAuth_mUserId_get(void* imarg1);
void* _wrap_new_BMXRoomAuth();
void _wrap_delete_BMXRoomAuth(void* imarg1);
void _wrap_BMXStream_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXStream_mUserId_get(void* imarg1);
void _wrap_BMXStream_mStreamId_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXStream_mStreamId_get(void* imarg1);
void _wrap_BMXStream_mMediaType_set(void* imarg1, int imarg2);
int _wrap_BMXStream_mMediaType_get(void* imarg1);
void _wrap_BMXStream_mEnableVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXStream_mEnableVideo_get(void* imarg1);
void _wrap_BMXStream_mEnableAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXStream_mEnableAudio_get(void* imarg1);
void _wrap_BMXStream_mEnableData_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXStream_mEnableData_get(void* imarg1);
void _wrap_BMXStream_mMuteVideo_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXStream_mMuteVideo_get(void* imarg1);
void _wrap_BMXStream_mMuteAudio_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXStream_mMuteAudio_get(void* imarg1);
void* _wrap_new_BMXStream();
void _wrap_delete_BMXStream(void* imarg1);
void _wrap_BMXVideoCanvas_mView_set(void* imarg1, void* imarg2);
void* _wrap_BMXVideoCanvas_mView_get(void* imarg1);
void _wrap_BMXVideoCanvas_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXVideoCanvas_mUserId_get(void* imarg1);
void _wrap_BMXVideoCanvas_mStream_set(void* imarg1, void* imarg2);
void* _wrap_BMXVideoCanvas_mStream_get(void* imarg1);
void _wrap_BMXVideoCanvas_mRenderMode_set(void* imarg1, int imarg2);
int _wrap_BMXVideoCanvas_mRenderMode_get(void* imarg1);
void _wrap_BMXVideoCanvas_mMirrodMode_set(void* imarg1, int imarg2);
int _wrap_BMXVideoCanvas_mMirrodMode_get(void* imarg1);
void* _wrap_new_BMXVideoCanvas();
void _wrap_delete_BMXVideoCanvas(void* imarg1);
void _wrap_BMXStreamStats_mUserId_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mUserId_get(void* imarg1);
void _wrap_BMXStreamStats_mStreamId_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXStreamStats_mStreamId_get(void* imarg1);
void _wrap_BMXStreamStats_mMediaType_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mMediaType_get(void* imarg1);
void _wrap_BMXStreamStats_mTrackType_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mTrackType_get(void* imarg1);
void _wrap_BMXStreamStats_mAudioBitrate_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mAudioBitrate_get(void* imarg1);
void _wrap_BMXStreamStats_mVideoBitrate_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mVideoBitrate_get(void* imarg1);
void _wrap_BMXStreamStats_mWidth_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mWidth_get(void* imarg1);
void _wrap_BMXStreamStats_mHeight_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mHeight_get(void* imarg1);
void _wrap_BMXStreamStats_mFrameRate_set(void* imarg1, int imarg2);
int _wrap_BMXStreamStats_mFrameRate_get(void* imarg1);
void _wrap_BMXStreamStats_mPacketLostRate_set(void* imarg1, float imarg2);
float _wrap_BMXStreamStats_mPacketLostRate_get(void* imarg1);
void* _wrap_new_BMXStreamStats();
void _wrap_delete_BMXStreamStats(void* imarg1);
void* _wrap_new_BMXJanusStreamInfo();
void _wrap_BMXJanusStreamInfo_mFeedId_set(void* imarg1, long long imarg2);
long long _wrap_BMXJanusStreamInfo_mFeedId_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mFeedDisplay_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusStreamInfo_mFeedDisplay_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mFeedMid_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusStreamInfo_mFeedMid_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mType_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusStreamInfo_mType_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mMid_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusStreamInfo_mMid_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mCodec_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusStreamInfo_mCodec_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mMindex_set(void* imarg1, int imarg2);
int _wrap_BMXJanusStreamInfo_mMindex_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mTalking_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusStreamInfo_mTalking_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mActive_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusStreamInfo_mActive_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mReady_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusStreamInfo_mReady_get(void* imarg1);
void _wrap_BMXJanusStreamInfo_mSend_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusStreamInfo_mSend_get(void* imarg1);
void _wrap_delete_BMXJanusStreamInfo(void* imarg1);
void* _wrap_new_BMXRoomParticipant();
void _wrap_BMXRoomParticipant_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXRoomParticipant_mUserId_get(void* imarg1);
void _wrap_BMXRoomParticipant_mDisplay_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomParticipant_mDisplay_get(void* imarg1);
void _wrap_BMXRoomParticipant_mIsPublisher_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomParticipant_mIsPublisher_get(void* imarg1);
void _wrap_BMXRoomParticipant_mIstalking_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRoomParticipant_mIstalking_get(void* imarg1);
void _wrap_delete_BMXRoomParticipant(void* imarg1);
void* _wrap_new_BMXJanusPublisher(long long imarg1);
void _wrap_BMXJanusPublisher_mUserId_set(void* imarg1, long long imarg2);
long long _wrap_BMXJanusPublisher_mUserId_get(void* imarg1);
void _wrap_BMXJanusPublisher_mDisplay_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusPublisher_mDisplay_get(void* imarg1);
void _wrap_BMXJanusPublisher_mAudioCodec_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusPublisher_mAudioCodec_get(void* imarg1);
void _wrap_BMXJanusPublisher_mVideoCodec_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXJanusPublisher_mVideoCodec_get(void* imarg1);
void _wrap_BMXJanusPublisher_mSimulcast_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusPublisher_mSimulcast_get(void* imarg1);
void _wrap_BMXJanusPublisher_mTalking_set(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXJanusPublisher_mTalking_get(void* imarg1);
void _wrap_BMXJanusPublisher_streams_set(void* imarg1, void* imarg2);
void* _wrap_BMXJanusPublisher_streams_get(void* imarg1);
void _wrap_delete_BMXJanusPublisher(void* imarg1);
void* _wrap_new_BMXRoomSDPInfo();
void _wrap_BMXRoomSDPInfo_sdp_set(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRoomSDPInfo_sdp_get(void* imarg1);
void _wrap_BMXRoomSDPInfo_type_set(void* imarg1, int imarg2);
int _wrap_BMXRoomSDPInfo_type_get(void* imarg1);
void _wrap_delete_BMXRoomSDPInfo(void* imarg1);
void* _wrap_new_BMXRTCConfig();
void _wrap_delete_BMXRTCConfig(void* imarg1);
NSString* _wrap_BMXRTCConfig_getVersion(void* imarg1);
void _wrap_BMXRTCConfig_setLogLevel(void* imarg1, int imarg2);
int _wrap_BMXRTCConfig_getLogLevel(void* imarg1);
void _wrap_BMXRTCConfig_setSDKMode(void* imarg1, int imarg2);
int _wrap_BMXRTCConfig_getSDKMode(void* imarg1);
void _wrap_BMXRTCConfig_setAutoPublishMode(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRTCConfig_getAutoPublishMode(void* imarg1);
void _wrap_BMXRTCConfig_setAutoSubscribeMode(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRTCConfig_getAutoSubscribeMode(void* imarg1);
void _wrap_BMXRTCConfig_setAudioOnlyMode(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRTCConfig_getAudioOnlyMode(void* imarg1);
void _wrap_BMXRTCConfig_setEnableLocalAudio(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRTCConfig_getEnableLocalAudio(void* imarg1);
void _wrap_BMXRTCConfig_setEnableLocalVideo(void* imarg1, BOOL imarg2);
BOOL _wrap_BMXRTCConfig_getEnableLocalVideo(void* imarg1);
void _wrap_delete_BMXRTCEngine(void* imarg1);
void _wrap_BMXRTCEngine_destroy(void* imarg1);
void _wrap_BMXRTCEngine_addRTCEngineListener(void* imarg1, void* imarg2);
void _wrap_BMXRTCEngine_removeRTCEngineListener(void* imarg1, void* imarg2);
void* _wrap_BMXRTCEngine_getRTCConfig(void* imarg1);
int _wrap_BMXRTCEngine_setRoomType(void* imarg1, int imarg2);
int _wrap_BMXRTCEngine_setStreamRole(void* imarg1, int imarg2);
int _wrap_BMXRTCEngine_setVideoCodec(void* imarg1, int imarg2);
int _wrap_BMXRTCEngine_setVideoProfile(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_setAudioProfile(void* imarg1, int imarg2);
int _wrap_BMXRTCEngine_joinRoom(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_leaveRoom(void* imarg1);
int _wrap_BMXRTCEngine_publish(void* imarg1, int imarg2, BOOL imarg3, BOOL imarg4);
int _wrap_BMXRTCEngine_unPublish(void* imarg1, int imarg2);
int _wrap_BMXRTCEngine_subscribe(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_unSubscribe(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_startPreview(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_stopPreview(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_startRemoteView(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_stopRemoteView(void* imarg1, void* imarg2);
int _wrap_BMXRTCEngine_muteLocalAudio(void* imarg1, BOOL imarg2);
int _wrap_BMXRTCEngine_muteLocalVideo(void* imarg1, int imarg2, BOOL imarg3);
int _wrap_BMXRTCEngine_muteRemoteAudio(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXRTCEngine_muteRemoteVideo(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXRTCEngine_switchCamera(void* imarg1);
void _wrap_delete_BMXRTCEngineListener(void* imarg1);
void _wrap_BMXRTCEngineListener_onJoinRoom(void* imarg1, NSString* imarg2, long long imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onLeaveRoom(void* imarg1, NSString* imarg2, long long imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCEngineListener_onRejoining(void* imarg1, long long imarg2, int imarg3);
void _wrap_BMXRTCEngineListener_onReJoinRoom(void* imarg1, NSString* imarg2, long long imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onMemberJoined(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRTCEngineListener_onMemberExited(void* imarg1, long long imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXRTCEngineListener_onLocalPublish(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onLocalUnPublish(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onRemotePublish(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onRemoteUnPublish(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onSubscribe(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onUnSubscribe(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onRemoteTrackNotify(void* imarg1, void* imarg2, int imarg3, NSString* imarg4, int imarg5);
void _wrap_BMXRTCEngineListener_onLocalStreamMuteRsp(void* imarg1, void* imarg2, int imarg3, BOOL imarg4, NSString* imarg5, int imarg6);
void _wrap_BMXRTCEngineListener_onRemoteStreamMuteRsp(void* imarg1, void* imarg2, int imarg3, BOOL imarg4, NSString* imarg5, int imarg6);
void _wrap_BMXRTCEngineListener_onSendRTCStats(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onRemoteRTCStats(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void _wrap_BMXRTCEngineListener_onLocalAudioLevel(void* imarg1, int imarg2);
void _wrap_BMXRTCEngineListener_onRemoteAudioLevel(void* imarg1, long long imarg2, int imarg3);
void _wrap_BMXRTCEngineListener_onKickoff(void* imarg1, NSString* imarg2, int imarg3);
void _wrap_BMXRTCEngineListener_onWarning(void* imarg1, NSString* imarg2, int imarg3);
void _wrap_BMXRTCEngineListener_onError(void* imarg1, NSString* imarg2, int imarg3);
void _wrap_BMXRTCEngineListener_onNetworkQuality(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
void* _wrap_new_BMXRTCEngineListener();
void _wrap_delete_BMXRTCRoom(void* imarg1);
long long _wrap_BMXRTCRoom_roomId(void* imarg1);
void _wrap_BMXRTCRoom_setRoomSecret(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRTCRoom_roomSecret(void* imarg1);
void _wrap_BMXRTCRoom_setPin(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXRTCRoom_pin(void* imarg1);
BOOL _wrap_BMXRTCRoom_permanent(void* imarg1);
BOOL _wrap_BMXRTCRoom_isPrivate(void* imarg1);
NSString* _wrap_BMXRTCRoom_roomDescription(void* imarg1);
long long _wrap_BMXRTCRoom_roomPrivateId(void* imarg1);
void _wrap_delete_BMXRTCService(void* imarg1);
void _wrap_BMXRTCService_setupRTCEngine(void* imarg1, void* imarg2);
void* _wrap_BMXRTCService_getRTCEngine(void* imarg1);
void* _wrap_BMXRTCService_getBMXRTCSignalService(void* imarg1);
void _wrap_BMXRTCService_sendRTCMessage(void* imarg1, void* imarg2);
void _wrap_BMXRTCService_addRTCServiceListener(void* imarg1, void* imarg2);
void _wrap_BMXRTCService_removeRTCServiceListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXRTCServiceListener();
void _wrap_delete_BMXRTCServiceListener(void* imarg1);
void _wrap_BMXRTCServiceListener_onRTCMessageStatusChanged(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXRTCServiceListener_onRTCCallMessageReceive(void* imarg1, void* imarg2);
void _wrap_BMXRTCServiceListener_onRTCPickupMessageReceive(void* imarg1, void* imarg2);
void _wrap_BMXRTCServiceListener_onRTCHangupMessageReceive(void* imarg1, void* imarg2);
void _wrap_BMXRTCServiceListener_onRTCRecordMessageReceive(void* imarg1, void* imarg2);
void _wrap_BMXRTCServiceListener_registerRTCService(void* imarg1, void* imarg2);
void _wrap_delete_BMXRTCSession(void* imarg1);
long long _wrap_BMXRTCSession_sessionId(void* imarg1);
long long _wrap_BMXRTCSession_pubHandlerId(void* imarg1);
long long _wrap_BMXRTCSession_subHandlerId(void* imarg1);
void _wrap_delete_BMXRTCSignalService(void* imarg1);
void _wrap_BMXRTCSignalService_createSession(void* imarg1);
void _wrap_BMXRTCSignalService_attachSession(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXRTCSignalService_createRoom(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_destroyRoom__SWIG_0(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
void _wrap_BMXRTCSignalService_destroyRoom__SWIG_1(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_editRoom(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_isExistsRoom(void* imarg1, void* imarg2, long long imarg3);
void _wrap_BMXRTCSignalService_allowed(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_kickParticipants(void* imarg1, void* imarg2, void* imarg3, long long imarg4);
void _wrap_BMXRTCSignalService_moderate(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_listRoom(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_listRoomparticipants(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_trickle(void* imarg1, void* imarg2, int imarg3, NSString* imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalService_trickleCompleted(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXRTCSignalService_pubJoinRoom(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_pubPublish(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_pubUnPublish(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_pubConfigue(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_subJoinRoom(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_subStart(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_subPause(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_subUnsubscribe(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_subConfigure(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalService_subSwitch(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXRTCSignalService_leaveRoom(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_hangUpSession(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_detachSession(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXRTCSignalService_destroySession(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_addBMXRTCSignalServiceListener(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalService_removeBMXRTCSignalServiceListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXRTCSignalServiceListener();
void _wrap_delete_BMXRTCSignalServiceListener(void* imarg1);
void _wrap_BMXRTCSignalServiceListener_onSessionCreate(void* imarg1, void* imarg2, int imarg3, NSString* imarg4);
void _wrap_BMXRTCSignalServiceListener_onSessionAttach(void* imarg1, void* imarg2, int imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onRoomCreate(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onRoomDestroy(void* imarg1, void* imarg2, long long imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onRoomEdit(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onRoomExist(void* imarg1, void* imarg2, long long imarg3, BOOL imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onRoomAllowed(void* imarg1, void* imarg2, void* imarg3, void* imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onRoomKick(void* imarg1, void* imarg2, void* imarg3, long long imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onRoomModerate(void* imarg1, void* imarg2, void* imarg3, long long imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onRoomList(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onRoomListParticipants(void* imarg1, void* imarg2, void* imarg3, void* imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onPubJoinRoom(void* imarg1, void* imarg2, void* imarg3, void* imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onOtherPubJoinRoom(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
void _wrap_BMXRTCSignalServiceListener_onPubConfigure(void* imarg1, void* imarg2, void* imarg3, void* imarg4, void* imarg5, int imarg6, NSString* imarg7);
void _wrap_BMXRTCSignalServiceListener_onPubUnPublish(void* imarg1, void* imarg2, void* imarg3, int imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onPublishWebrtcUp(void* imarg1, void* imarg2);
void _wrap_BMXRTCSignalServiceListener_onSubJoinRoomUpdate(void* imarg1, void* imarg2, void* imarg3, void* imarg4, long long imarg5, void* imarg6, int imarg7, NSString* imarg8);
void _wrap_BMXRTCSignalServiceListener_onSubStart(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onSubPause(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onSubUnsubscribe(void* imarg1, void* imarg2, void* imarg3, void* imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onSubConfigure(void* imarg1, void* imarg2, void* imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onSubSwitch(void* imarg1, void* imarg2, void* imarg3, long long imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onLeaveRoom(void* imarg1, void* imarg2, long long imarg3, long long imarg4, int imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onSubscribeWebrtcUp(void* imarg1, void* imarg2, long long imarg3);
void _wrap_BMXRTCSignalServiceListener_onMediaInfo(void* imarg1, void* imarg2, long long imarg3, int imarg4, BOOL imarg5, NSString* imarg6);
void _wrap_BMXRTCSignalServiceListener_onSlowlink(void* imarg1, void* imarg2, long long imarg3, BOOL imarg4, int imarg5);
void _wrap_BMXRTCSignalServiceListener_onHangup(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXRTCSignalServiceListener_onSessionHangup(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXRTCSignalServiceListener_onSessionDetach(void* imarg1, void* imarg2, int imarg3, int imarg4, NSString* imarg5);
void _wrap_BMXRTCSignalServiceListener_onSessionDestroy(void* imarg1, long long imarg2, int imarg3, NSString* imarg4);
void _wrap_BMXRTCSignalServiceListener_registerRTCSignalService(void* imarg1, void* imarg2);
void _wrap_delete_BMXGroup(void* imarg1);
long long _wrap_BMXGroup_groupId(void* imarg1);
int _wrap_BMXGroup_groupType(void* imarg1);
NSString* _wrap_BMXGroup_myNickname(void* imarg1);
NSString* _wrap_BMXGroup_name(void* imarg1);
NSString* _wrap_BMXGroup_description(void* imarg1);
NSString* _wrap_BMXGroup_avatarRatelUrl(void* imarg1);
NSString* _wrap_BMXGroup_avatarUrl(void* imarg1);
NSString* _wrap_BMXGroup_avatarPath(void* imarg1);
NSString* _wrap_BMXGroup_avatarThumbnailUrl(void* imarg1);
NSString* _wrap_BMXGroup_avatarThumbnailPath(void* imarg1);
long long _wrap_BMXGroup_createTime(void* imarg1);
NSString* _wrap_BMXGroup_extension(void* imarg1);
long long _wrap_BMXGroup_ownerId(void* imarg1);
int _wrap_BMXGroup_capacity(void* imarg1);
int _wrap_BMXGroup_membersCount(void* imarg1);
int _wrap_BMXGroup_adminsCount(void* imarg1);
int _wrap_BMXGroup_blockListSize(void* imarg1);
int _wrap_BMXGroup_bannedListSize(void* imarg1);
int _wrap_BMXGroup_sharedFilesCount(void* imarg1);
long long _wrap_BMXGroup_latestAnnouncementId(void* imarg1);
int _wrap_BMXGroup_msgPushMode(void* imarg1);
int _wrap_BMXGroup_modifyMode(void* imarg1);
int _wrap_BMXGroup_joinAuthMode(void* imarg1);
int _wrap_BMXGroup_inviteMode(void* imarg1);
int _wrap_BMXGroup_msgMuteMode(void* imarg1);
int _wrap_BMXGroup_groupStatus(void* imarg1);
BOOL _wrap_BMXGroup_isMember(void* imarg1);
BOOL _wrap_BMXGroup_enableReadAck(void* imarg1);
BOOL _wrap_BMXGroup_historyVisible(void* imarg1);
int _wrap_BMXGroup_roleType(void* imarg1);
long long _wrap_BMXGroup_banExpireTime(void* imarg1);
void _wrap_delete_BMXGroupService(void* imarg1);
int _wrap_BMXGroupService_get(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXGroupService_search__SWIG_0(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXGroupService_fetchGroupsByIdList(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_search__SWIG_1(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_fetchGroupById(void* imarg1, long long imarg2, void** imarg3, BOOL imarg4);
int _wrap_BMXGroupService_search__SWIG_2(void* imarg1, long long imarg2, void** imarg3, BOOL imarg4);
int _wrap_BMXGroupService_fetchLocalGroupsByName(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_search__SWIG_3(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_create(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_destroy(void* imarg1, void* imarg2);
int _wrap_BMXGroupService_join(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_leave(void* imarg1, void* imarg2);
int _wrap_BMXGroupService_getInfo(void* imarg1, void* imarg2);
int _wrap_BMXGroupService_getMembersNickname(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
int _wrap_BMXGroupService_getInvitationList__SWIG_0(void* imarg1, void* imarg2, NSString* imarg3, int imarg4);
int _wrap_BMXGroupService_getInvitationList__SWIG_1(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_getInvitationList__SWIG_2(void* imarg1, void* imarg2);
int _wrap_BMXGroupService_getApplicationList__SWIG_0(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4, int imarg5);
int _wrap_BMXGroupService_getApplicationList__SWIG_1(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getApplicationList__SWIG_2(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getMembers__SWIG_0(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4, int imarg5);
int _wrap_BMXGroupService_getMembers__SWIG_1(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getMembers__SWIG_2(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getMembers__SWIG_3(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_addMembers(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_removeMembers(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_addAdmins(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_removeAdmins(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getAdmins(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_blockMembers(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_unblockMembers(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getBlockList__SWIG_0(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4, int imarg5);
int _wrap_BMXGroupService_getBlockList__SWIG_1(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getBlockList__SWIG_2(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getBlockList__SWIG_3(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_banMembers__SWIG_0(void* imarg1, void* imarg2, void* imarg3, long long imarg4, NSString* imarg5);
int _wrap_BMXGroupService_banMembers__SWIG_1(void* imarg1, void* imarg2, void* imarg3, long long imarg4);
int _wrap_BMXGroupService_banGroup(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_unbanMembers(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_unbanGroup(void* imarg1, void* imarg2);
int _wrap_BMXGroupService_getBannedMembers__SWIG_0(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4, int imarg5);
int _wrap_BMXGroupService_getBannedMembers__SWIG_1(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getBannedMembers__SWIG_2(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getBannedMembers__SWIG_3(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_muteMessage(void* imarg1, void* imarg2, int imarg3);
int _wrap_BMXGroupService_acceptApplication(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_declineApplication__SWIG_0(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
int _wrap_BMXGroupService_declineApplication__SWIG_1(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_acceptInvitation(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_declineInvitation__SWIG_0(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
int _wrap_BMXGroupService_declineInvitation__SWIG_1(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_transferOwner(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_uploadSharedFile(void* imarg1, void* imarg2, NSString* imarg3, NSString* imarg4, NSString* imarg5, void* imarg6);
int _wrap_BMXGroupService_cancelUploadSharedFile(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_removeSharedFile(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_downloadSharedFile(void* imarg1, void* imarg2, void* imarg3, void* imarg4);
int _wrap_BMXGroupService_cancelDownloadSharedFile(void* imarg1, void* imarg2, void* imarg3);
int _wrap_BMXGroupService_getSharedFilesList(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_changeSharedFileName(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_getLatestAnnouncement(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_getAnnouncementList(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXGroupService_editAnnouncement(void* imarg1, void* imarg2, NSString* imarg3, NSString* imarg4);
int _wrap_BMXGroupService_deleteAnnouncement(void* imarg1, void* imarg2, long long imarg3);
int _wrap_BMXGroupService_setName(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_setDescription(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_setExtension(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_setMyNickname(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXGroupService_setMsgPushMode(void* imarg1, void* imarg2, int imarg3);
int _wrap_BMXGroupService_setJoinAuthMode(void* imarg1, void* imarg2, int imarg3);
int _wrap_BMXGroupService_setInviteMode(void* imarg1, void* imarg2, int imarg3);
int _wrap_BMXGroupService_setAllowMemberModify(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXGroupService_setEnableReadAck(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXGroupService_setHistoryVisible(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXGroupService_setAvatar(void* imarg1, void* imarg2, NSString* imarg3, void* imarg4);
int _wrap_BMXGroupService_downloadAvatar(void* imarg1, void* imarg2, BOOL imarg3, void* imarg4);
void _wrap_BMXGroupService_addGroupListener(void* imarg1, void* imarg2);
void _wrap_BMXGroupService_removeGroupListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXImageAttachment__SWIG_0(NSString* imarg1, void* imarg2, NSString* imarg3);
void* _wrap_new_BMXImageAttachment__SWIG_1(NSString* imarg1, void* imarg2);
void* _wrap_new_BMXImageAttachment__SWIG_2(NSString* imarg1, void* imarg2, NSString* imarg3, long long imarg4);
void _wrap_delete_BMXImageAttachment(void* imarg1);
int _wrap_BMXImageAttachment_type(void* imarg1);
void* _wrap_BMXImageAttachment_clone(void* imarg1);
void* _wrap_BMXImageAttachment_size(void* imarg1);
NSString* _wrap_BMXImageAttachment_thumbnailUrl(void* imarg1);
void _wrap_BMXImageAttachment_setThumbnail(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXImageAttachment_thumbnailPath(void* imarg1);
int _wrap_BMXImageAttachment_thumbnailDownloadStatus(void* imarg1);
void* _wrap_BMXImageAttachment_dynamic_cast(void* imarg1);
void* _wrap_new_BMXLocationAttachment(double imarg1, double imarg2, NSString* imarg3);
void _wrap_delete_BMXLocationAttachment(void* imarg1);
int _wrap_BMXLocationAttachment_type(void* imarg1);
void* _wrap_BMXLocationAttachment_clone(void* imarg1);
double _wrap_BMXLocationAttachment_latitude(void* imarg1);
double _wrap_BMXLocationAttachment_longitude(void* imarg1);
NSString* _wrap_BMXLocationAttachment_address(void* imarg1);
void* _wrap_BMXLocationAttachment_dynamic_cast(void* imarg1);
void _wrap_delete_BMXRosterService(void* imarg1);
int _wrap_BMXRosterService_get(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXRosterService_fetchRosterById(void* imarg1, long long imarg2, BOOL imarg3, void* imarg4);
int _wrap_BMXRosterService_search__SWIG_0(void* imarg1, long long imarg2, BOOL imarg3, void** imarg4);
int _wrap_BMXRosterService_fetchRosterByName(void* imarg1, NSString* imarg2, BOOL imarg3, void* imarg4);
int _wrap_BMXRosterService_search__SWIG_1(void* imarg1, NSString* imarg2, BOOL imarg3, void** imarg4);
int _wrap_BMXRosterService_fetchRostersByIdList(void* imarg1, void* imarg2, void* imarg3, BOOL imarg4);
int _wrap_BMXRosterService_search__SWIG_2(void* imarg1, void* imarg2, void** imarg3, BOOL imarg4);
int _wrap_BMXRosterService_setItemLocalExtension(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXRosterService_setItemExtension(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXRosterService_setItemAlias(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXRosterService_setItemMuteNotification(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXRosterService_getApplicationList__SWIG_0(void* imarg1, void** imarg2, NSString* imarg3, int imarg4);
int _wrap_BMXRosterService_getApplicationList__SWIG_1(void* imarg1, void* imarg2, NSString* imarg3);
int _wrap_BMXRosterService_apply__SWIG_0(void* imarg1, long long imarg2, NSString* imarg3, NSString* imarg4);
int _wrap_BMXRosterService_apply__SWIG_1(void* imarg1, long long imarg2, NSString* imarg3);
int _wrap_BMXRosterService_remove(void* imarg1, long long imarg2);
int _wrap_BMXRosterService_accept(void* imarg1, long long imarg2);
int _wrap_BMXRosterService_decline(void* imarg1, long long imarg2, NSString* imarg3);
int _wrap_BMXRosterService_block(void* imarg1, long long imarg2);
int _wrap_BMXRosterService_unblock(void* imarg1, long long imarg2);
int _wrap_BMXRosterService_getBlockList(void* imarg1, void* imarg2, BOOL imarg3);
int _wrap_BMXRosterService_downloadAvatar(void* imarg1, void* imarg2, BOOL imarg3, void* imarg4);
void _wrap_BMXRosterService_addRosterListener(void* imarg1, void* imarg2);
void _wrap_BMXRosterService_removeRosterListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXMessagePage__SWIG_0();
void* _wrap_new_BMXMessagePage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXMessagePage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXMessagePage__SWIG_3(void* imarg1);
void* _wrap_new_BMXMessagePage__SWIG_4(void* imarg1);
void _wrap_delete_BMXMessagePage(void* imarg1);
unsigned long _wrap_BMXMessagePage_count(void* imarg1);
long long _wrap_BMXMessagePage_offset(void* imarg1);
NSString* _wrap_BMXMessagePage_cursor(void* imarg1);
void* _wrap_BMXMessagePage_result(void* imarg1);
void* _wrap_new_BMXGroupMemberResultPage__SWIG_0();
void* _wrap_new_BMXGroupMemberResultPage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXGroupMemberResultPage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXGroupMemberResultPage__SWIG_3(void* imarg1);
void* _wrap_new_BMXGroupMemberResultPage__SWIG_4(void* imarg1);
void _wrap_delete_BMXGroupMemberResultPage(void* imarg1);
unsigned long _wrap_BMXGroupMemberResultPage_count(void* imarg1);
long long _wrap_BMXGroupMemberResultPage_offset(void* imarg1);
NSString* _wrap_BMXGroupMemberResultPage_cursor(void* imarg1);
void* _wrap_BMXGroupMemberResultPage_result(void* imarg1);
void* _wrap_new_BMXGroupBannedMemberResultPage__SWIG_0();
void* _wrap_new_BMXGroupBannedMemberResultPage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXGroupBannedMemberResultPage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXGroupBannedMemberResultPage__SWIG_3(void* imarg1);
void* _wrap_new_BMXGroupBannedMemberResultPage__SWIG_4(void* imarg1);
void _wrap_delete_BMXGroupBannedMemberResultPage(void* imarg1);
unsigned long _wrap_BMXGroupBannedMemberResultPage_count(void* imarg1);
long long _wrap_BMXGroupBannedMemberResultPage_offset(void* imarg1);
NSString* _wrap_BMXGroupBannedMemberResultPage_cursor(void* imarg1);
void* _wrap_BMXGroupBannedMemberResultPage_result(void* imarg1);
void* _wrap_new_BMXRosterApplicationResultPage__SWIG_0();
void* _wrap_new_BMXRosterApplicationResultPage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXRosterApplicationResultPage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXRosterApplicationResultPage__SWIG_3(void* imarg1);
void* _wrap_new_BMXRosterApplicationResultPage__SWIG_4(void* imarg1);
void _wrap_delete_BMXRosterApplicationResultPage(void* imarg1);
unsigned long _wrap_BMXRosterApplicationResultPage_count(void* imarg1);
long long _wrap_BMXRosterApplicationResultPage_offset(void* imarg1);
NSString* _wrap_BMXRosterApplicationResultPage_cursor(void* imarg1);
void* _wrap_BMXRosterApplicationResultPage_result(void* imarg1);
void* _wrap_new_BMXGroupApplicationPage__SWIG_0();
void* _wrap_new_BMXGroupApplicationPage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXGroupApplicationPage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXGroupApplicationPage__SWIG_3(void* imarg1);
void* _wrap_new_BMXGroupApplicationPage__SWIG_4(void* imarg1);
void _wrap_delete_BMXGroupApplicationPage(void* imarg1);
unsigned long _wrap_BMXGroupApplicationPage_count(void* imarg1);
long long _wrap_BMXGroupApplicationPage_offset(void* imarg1);
NSString* _wrap_BMXGroupApplicationPage_cursor(void* imarg1);
void* _wrap_BMXGroupApplicationPage_result(void* imarg1);
void* _wrap_new_BMXGroupInvitationPage__SWIG_0();
void* _wrap_new_BMXGroupInvitationPage__SWIG_1(void* imarg1, long long imarg2);
void* _wrap_new_BMXGroupInvitationPage__SWIG_2(void* imarg1, NSString* imarg2);
void* _wrap_new_BMXGroupInvitationPage__SWIG_3(void* imarg1);
void* _wrap_new_BMXGroupInvitationPage__SWIG_4(void* imarg1);
void _wrap_delete_BMXGroupInvitationPage(void* imarg1);
unsigned long _wrap_BMXGroupInvitationPage_count(void* imarg1);
long long _wrap_BMXGroupInvitationPage_offset(void* imarg1);
NSString* _wrap_BMXGroupInvitationPage_cursor(void* imarg1);
void* _wrap_BMXGroupInvitationPage_result(void* imarg1);
void* _wrap_new_BMXMessageListList__SWIG_0();
void* _wrap_new_BMXMessageListList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXMessageListList_size(void* imarg1);
unsigned long _wrap_BMXMessageListList_capacity(void* imarg1);
void _wrap_BMXMessageListList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXMessageListList_isEmpty(void* imarg1);
void _wrap_BMXMessageListList_clear(void* imarg1);
void _wrap_BMXMessageListList_add(void* imarg1, void* imarg2);
void* _wrap_BMXMessageListList_get(void* imarg1, int imarg2);
void _wrap_BMXMessageListList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXMessageListList(void* imarg1);
void _wrap_delete_BMXRosterItem(void* imarg1);
long long _wrap_BMXRosterItem_rosterId(void* imarg1);
NSString* _wrap_BMXRosterItem_username(void* imarg1);
NSString* _wrap_BMXRosterItem_nickname(void* imarg1);
NSString* _wrap_BMXRosterItem_avatarRatelUrl(void* imarg1);
NSString* _wrap_BMXRosterItem_avatarUrl(void* imarg1);
NSString* _wrap_BMXRosterItem_avatarPath(void* imarg1);
NSString* _wrap_BMXRosterItem_avatarThumbnailUrl(void* imarg1);
NSString* _wrap_BMXRosterItem_avatarThumbnailPath(void* imarg1);
NSString* _wrap_BMXRosterItem_publicInfo(void* imarg1);
NSString* _wrap_BMXRosterItem_alias(void* imarg1);
NSString* _wrap_BMXRosterItem_ext(void* imarg1);
NSString* _wrap_BMXRosterItem_localExt(void* imarg1);
int _wrap_BMXRosterItem_relation(void* imarg1);
BOOL _wrap_BMXRosterItem_isMuteNotification(void* imarg1);
int _wrap_BMXRosterItem_addFriendAuthMode(void* imarg1);
NSString* _wrap_BMXRosterItem_authQuestion(void* imarg1);
void* _wrap_new_BMXRosterItemList__SWIG_0();
void* _wrap_new_BMXRosterItemList__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRosterItemList_size(void* imarg1);
unsigned long _wrap_BMXRosterItemList_capacity(void* imarg1);
void _wrap_BMXRosterItemList_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRosterItemList_isEmpty(void* imarg1);
void _wrap_BMXRosterItemList_clear(void* imarg1);
void _wrap_BMXRosterItemList_add(void* imarg1, void* imarg2);
void* _wrap_BMXRosterItemList_get(void* imarg1, int imarg2);
void _wrap_BMXRosterItemList_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRosterItemList(void* imarg1);
void* _wrap_new_BMXRosterServiceListener();
void _wrap_delete_BMXRosterServiceListener(void* imarg1);
void _wrap_BMXRosterServiceListener_onFriendAdded(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRosterServiceListener_onFriendRemoved(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRosterServiceListener_onApplied(void* imarg1, long long imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXRosterServiceListener_onApplicationAccepted(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRosterServiceListener_onApplicationDeclined(void* imarg1, long long imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXRosterServiceListener_onBlockListAdded(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRosterServiceListener_onBlockListRemoved(void* imarg1, long long imarg2, long long imarg3);
void _wrap_BMXRosterServiceListener_onRosterInfoUpdate(void* imarg1, void* imarg2);
void _wrap_BMXRosterServiceListener_onRosterListUpdate(void* imarg1);
void _wrap_BMXRosterServiceListener_registerRosterService(void* imarg1, void* imarg2);
void _wrap_delete_BMXUserProfile(void* imarg1);
long long _wrap_BMXUserProfile_userId(void* imarg1);
int _wrap_BMXUserProfile_category(void* imarg1);
NSString* _wrap_BMXUserProfile_username(void* imarg1);
NSString* _wrap_BMXUserProfile_nickname(void* imarg1);
NSString* _wrap_BMXUserProfile_avatarRatelUrl(void* imarg1);
NSString* _wrap_BMXUserProfile_avatarUrl(void* imarg1);
NSString* _wrap_BMXUserProfile_avatarPath(void* imarg1);
NSString* _wrap_BMXUserProfile_avatarThumbnailPath(void* imarg1);
NSString* _wrap_BMXUserProfile_mobilePhone(void* imarg1);
NSString* _wrap_BMXUserProfile_email(void* imarg1);
NSString* _wrap_BMXUserProfile_publicInfo(void* imarg1);
NSString* _wrap_BMXUserProfile_privateInfo(void* imarg1);
int _wrap_BMXUserProfile_addFriendAuthMode(void* imarg1);
void* _wrap_BMXUserProfile_authQuestion(void* imarg1);
void* _wrap_BMXUserProfile_messageSetting(void* imarg1);
BOOL _wrap_BMXUserProfile_isAutoAcceptGroupInvite(void* imarg1);
void _wrap_delete_BMXUserService(void* imarg1);
int _wrap_BMXUserService_bindDevice(void* imarg1, NSString* imarg2);
int _wrap_BMXUserService_getDeviceList(void* imarg1, void* imarg2);
int _wrap_BMXUserService_deleteDevice(void* imarg1, int imarg2);
int _wrap_BMXUserService_getProfile(void* imarg1, void** imarg2, BOOL imarg3);
int _wrap_BMXUserService_setNickname(void* imarg1, NSString* imarg2);
int _wrap_BMXUserService_uploadAvatar(void* imarg1, NSString* imarg2, void* imarg3);
int _wrap_BMXUserService_downloadAvatar(void* imarg1, void* imarg2, BOOL imarg3, void* imarg4);
int _wrap_BMXUserService_setPublicInfo(void* imarg1, NSString* imarg2);
int _wrap_BMXUserService_setPrivateInfo(void* imarg1, NSString* imarg2);
int _wrap_BMXUserService_setAddFriendAuthMode(void* imarg1, int imarg2);
int _wrap_BMXUserService_setAuthQuestion(void* imarg1, void* imarg2);
int _wrap_BMXUserService_setEnablePush(void* imarg1, BOOL imarg2);
int _wrap_BMXUserService_setEnablePushDetaile(void* imarg1, BOOL imarg2);
int _wrap_BMXUserService_setPushNickname(void* imarg1, NSString* imarg2);
int _wrap_BMXUserService_setPushAlias(void* imarg1, NSString* imarg2, NSString* imarg3);
int _wrap_BMXUserService_setNotificationSound(void* imarg1, BOOL imarg2);
int _wrap_BMXUserService_setNotificationVibrate(void* imarg1, BOOL imarg2);
int _wrap_BMXUserService_setAutoDownloadAttachment(void* imarg1, BOOL imarg2);
int _wrap_BMXUserService_setAutoAcceptGroupInvite(void* imarg1, BOOL imarg2);
void _wrap_BMXUserService_addUserListener(void* imarg1, void* imarg2);
void _wrap_BMXUserService_removeUserListener(void* imarg1, void* imarg2);
void* _wrap_new_BMXUserServiceListener();
void _wrap_delete_BMXUserServiceListener(void* imarg1);
void _wrap_BMXUserServiceListener_onConnectStatusChanged(void* imarg1, int imarg2);
void _wrap_BMXUserServiceListener_onUserSignIn(void* imarg1, void* imarg2);
void _wrap_BMXUserServiceListener_onUserSignOut(void* imarg1, int imarg2, long long imarg3);
void _wrap_BMXUserServiceListener_onInfoUpdated(void* imarg1, void* imarg2);
void _wrap_BMXUserServiceListener_onOtherDeviceSingIn(void* imarg1, int imarg2);
void _wrap_BMXUserServiceListener_onOtherDeviceSingOut(void* imarg1, int imarg2);
void _wrap_BMXUserServiceListener_onTrafficLimitExceeded(void* imarg1);
void _wrap_BMXUserServiceListener_registerUserService(void* imarg1, void* imarg2);
void* _wrap_new_BMXVideoAttachment__SWIG_0(NSString* imarg1, int imarg2, void* imarg3, NSString* imarg4);
void* _wrap_new_BMXVideoAttachment__SWIG_1(NSString* imarg1, int imarg2, void* imarg3);
void* _wrap_new_BMXVideoAttachment__SWIG_2(NSString* imarg1, NSString* imarg2, int imarg3, void* imarg4, NSString* imarg5);
void* _wrap_new_BMXVideoAttachment__SWIG_3(NSString* imarg1, NSString* imarg2, int imarg3, void* imarg4);
void* _wrap_new_BMXVideoAttachment__SWIG_4(NSString* imarg1, int imarg2, void* imarg3, NSString* imarg4, long long imarg5);
void* _wrap_new_BMXVideoAttachment__SWIG_5(NSString* imarg1, NSString* imarg2, int imarg3, void* imarg4, NSString* imarg5, long long imarg6);
void _wrap_delete_BMXVideoAttachment(void* imarg1);
int _wrap_BMXVideoAttachment_type(void* imarg1);
void* _wrap_BMXVideoAttachment_clone(void* imarg1);
void* _wrap_BMXVideoAttachment_size(void* imarg1);
int _wrap_BMXVideoAttachment_duration(void* imarg1);
void _wrap_BMXVideoAttachment_setThumbnail(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXVideoAttachment_thumbnailPath(void* imarg1);
NSString* _wrap_BMXVideoAttachment_thumbnailUrl(void* imarg1);
void _wrap_BMXVideoAttachment_setThumbnailRatelUrl(void* imarg1, NSString* imarg2);
NSString* _wrap_BMXVideoAttachment_thumbnailRatelUrl(void* imarg1);
int _wrap_BMXVideoAttachment_thumbnailDownloadStatus(void* imarg1);
void* _wrap_BMXVideoAttachment_dynamic_cast(void* imarg1);
void* _wrap_new_BMXVoiceAttachment__SWIG_0(NSString* imarg1, int imarg2, NSString* imarg3);
void* _wrap_new_BMXVoiceAttachment__SWIG_1(NSString* imarg1, int imarg2);
void* _wrap_new_BMXVoiceAttachment__SWIG_2(NSString* imarg1, int imarg2, NSString* imarg3, long long imarg4);
void _wrap_delete_BMXVoiceAttachment(void* imarg1);
int _wrap_BMXVoiceAttachment_type(void* imarg1);
void* _wrap_BMXVoiceAttachment_clone(void* imarg1);
int _wrap_BMXVoiceAttachment_duration(void* imarg1);
void* _wrap_BMXVoiceAttachment_dynamic_cast(void* imarg1);
void* _wrap_new_BMXGroupServiceListener();
void _wrap_delete_BMXGroupServiceListener(void* imarg1);
void _wrap_BMXGroupServiceListener_onGroupCreate(void* imarg1, void* imarg2);
void _wrap_BMXGroupServiceListener_onGroupListUpdate__SWIG_0(void* imarg1, void* imarg2);
void _wrap_BMXGroupServiceListener_onGroupJoined(void* imarg1, void* imarg2);
void _wrap_BMXGroupServiceListener_onGroupLeft(void* imarg1, void* imarg2, NSString* imarg3);
void _wrap_BMXGroupServiceListener_onInvitated(void* imarg1, long long imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onInvitationAccepted(void* imarg1, void* imarg2, long long imarg3);
void _wrap_BMXGroupServiceListener_onInvitationDeclined(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onApplied(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onApplicationAccepted(void* imarg1, void* imarg2, long long imarg3);
void _wrap_BMXGroupServiceListener_onApplicationDeclined(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onMembersBanned(void* imarg1, void* imarg2, void* imarg3, long long imarg4);
void _wrap_BMXGroupServiceListener_onMembersUnbanned(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onMemberJoined(void* imarg1, void* imarg2, long long imarg3, long long imarg4);
void _wrap_BMXGroupServiceListener_onMemberLeft(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onAdminsAdded(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onAdminsRemoved(void* imarg1, void* imarg2, void* imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onOwnerAssigned(void* imarg1, void* imarg2);
void _wrap_BMXGroupServiceListener_onGroupInfoUpdate(void* imarg1, void* imarg2, int imarg3);
void _wrap_BMXGroupServiceListener_onMemberChangeNickName(void* imarg1, void* imarg2, long long imarg3, NSString* imarg4);
void _wrap_BMXGroupServiceListener_onAnnouncementUpdate(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onSharedFileUploaded(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onSharedFileDeleted(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onSharedFileUpdated(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onBlockListAdded(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onBlockListRemoved(void* imarg1, void* imarg2, void* imarg3);
void _wrap_BMXGroupServiceListener_onGroupListUpdate__SWIG_1(void* imarg1);
void _wrap_BMXGroupServiceListener_registerGroupService(void* imarg1, void* imarg2);
void _wrap_delete_BMXPushUserProfile(void* imarg1);
long long _wrap_BMXPushUserProfile_userId(void* imarg1);
NSString* _wrap_BMXPushUserProfile_pushAlias(void* imarg1);
NSString* _wrap_BMXPushUserProfile_pushToken(void* imarg1);
void* _wrap_BMXPushUserProfile_messagePushSetting(void* imarg1);
void* _wrap_new_BMXRTCStreams__SWIG_0();
void* _wrap_new_BMXRTCStreams__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRTCStreams_size(void* imarg1);
unsigned long _wrap_BMXRTCStreams_capacity(void* imarg1);
void _wrap_BMXRTCStreams_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRTCStreams_isEmpty(void* imarg1);
void _wrap_BMXRTCStreams_clear(void* imarg1);
void _wrap_BMXRTCStreams_add(void* imarg1, void* imarg2);
void* _wrap_BMXRTCStreams_get(void* imarg1, int imarg2);
void _wrap_BMXRTCStreams_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRTCStreams(void* imarg1);
void* _wrap_new_BMXRTCRoomParticipants__SWIG_0();
void* _wrap_new_BMXRTCRoomParticipants__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRTCRoomParticipants_size(void* imarg1);
unsigned long _wrap_BMXRTCRoomParticipants_capacity(void* imarg1);
void _wrap_BMXRTCRoomParticipants_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRTCRoomParticipants_isEmpty(void* imarg1);
void _wrap_BMXRTCRoomParticipants_clear(void* imarg1);
void _wrap_BMXRTCRoomParticipants_add(void* imarg1, void* imarg2);
void* _wrap_BMXRTCRoomParticipants_get(void* imarg1, int imarg2);
void _wrap_BMXRTCRoomParticipants_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRTCRoomParticipants(void* imarg1);
void* _wrap_new_BMXRTCPublishers__SWIG_0();
void* _wrap_new_BMXRTCPublishers__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRTCPublishers_size(void* imarg1);
unsigned long _wrap_BMXRTCPublishers_capacity(void* imarg1);
void _wrap_BMXRTCPublishers_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRTCPublishers_isEmpty(void* imarg1);
void _wrap_BMXRTCPublishers_clear(void* imarg1);
void _wrap_BMXRTCPublishers_add(void* imarg1, void* imarg2);
void* _wrap_BMXRTCPublishers_get(void* imarg1, int imarg2);
void _wrap_BMXRTCPublishers_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRTCPublishers(void* imarg1);
void* _wrap_new_BMXRTCRooms__SWIG_0();
void* _wrap_new_BMXRTCRooms__SWIG_1(unsigned long imarg1);
unsigned long _wrap_BMXRTCRooms_size(void* imarg1);
unsigned long _wrap_BMXRTCRooms_capacity(void* imarg1);
void _wrap_BMXRTCRooms_reserve(void* imarg1, unsigned long imarg2);
BOOL _wrap_BMXRTCRooms_isEmpty(void* imarg1);
void _wrap_BMXRTCRooms_clear(void* imarg1);
void _wrap_BMXRTCRooms_add(void* imarg1, void* imarg2);
void* _wrap_BMXRTCRooms_get(void* imarg1, int imarg2);
void _wrap_BMXRTCRooms_set(void* imarg1, int imarg2, void* imarg3);
void _wrap_delete_BMXRTCRooms(void* imarg1);

#ifdef __cplusplus
}
#endif

#endif
